/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface MetaFranchiseManagerInterface extends ethers.utils.Interface {
  functions: {
    "burnMetaFranchise(address,uint256,uint256,uint8)": FunctionFragment;
    "claimFromAllFranchises(uint256)": FunctionFragment;
    "claimFromAllFranchisesBNB(uint256,address)": FunctionFragment;
    "companyFranchises(uint256,uint256)": FunctionFragment;
    "companyFranchisesCounter(uint256)": FunctionFragment;
    "createMetaFranchise(address,uint256,uint256,uint8)": FunctionFragment;
    "createMetaFranchiseUsingBNB(address,uint256,uint256,uint256)": FunctionFragment;
    "createMetaFranchiseUsingUnclaimedBNB(address,uint256,uint256,uint256)": FunctionFragment;
    "franchisesLastClaimDates(uint256,uint256)": FunctionFragment;
    "franchisesUsdInvested(uint256,uint256)": FunctionFragment;
    "franchisesWorkers(uint256,uint256)": FunctionFragment;
    "getCreateFranchisePrice()": FunctionFragment;
    "getCreateFranchisePriceBNB()": FunctionFragment;
    "getFranchiseDailyEarnings()": FunctionFragment;
    "getFranchiseDailyEarningsBNB()": FunctionFragment;
    "getFranchiseValue()": FunctionFragment;
    "getFranchisesByContinent(uint256)": FunctionFragment;
    "getFranchisesLastClaimDates(uint256)": FunctionFragment;
    "getFranchisesUsdInvested(uint256,uint256)": FunctionFragment;
    "getHireWorkerFranchisePriceBNB()": FunctionFragment;
    "getMaintainceFranchiseExpenses()": FunctionFragment;
    "getMaintainceFranchiseExpensesBNBPercent()": FunctionFragment;
    "getMetaFranchisesUnclaimedRewards(uint256)": FunctionFragment;
    "getMetaFranchisesUnclaimedRewardsBNB(uint256)": FunctionFragment;
    "getNumberOfMetaFranchises(uint256)": FunctionFragment;
    "getPaymentTokenAddress()": FunctionFragment;
    "getTotalFranchises()": FunctionFragment;
    "hireWorker(uint256,uint8)": FunctionFragment;
    "hireWorkerUsingBNB(uint256,uint8)": FunctionFragment;
    "initialize(address)": FunctionFragment;
    "lastFranchiseClaimDate(uint256)": FunctionFragment;
    "paused()": FunctionFragment;
    "self()": FunctionFragment;
    "sellMetaFranchise(address,uint256,uint256,uint8)": FunctionFragment;
    "setCreateFranchisePrice(uint16)": FunctionFragment;
    "setCreateFranchisePriceBNB(uint16)": FunctionFragment;
    "setFranchiseDailyEarnings(uint16)": FunctionFragment;
    "setFranchiseDailyEarningsBNB(uint16)": FunctionFragment;
    "setHireWorkerFranchisePrice(uint16)": FunctionFragment;
    "setMaintainceFranchiseExpenses(uint16)": FunctionFragment;
    "setMaintainceFranchiseExpensesBNBPercent(uint16)": FunctionFragment;
    "setPaymentTokenAddress(address)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "burnMetaFranchise",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "claimFromAllFranchises",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "claimFromAllFranchisesBNB",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "companyFranchises",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "companyFranchisesCounter",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createMetaFranchise",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createMetaFranchiseUsingBNB",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createMetaFranchiseUsingUnclaimedBNB",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "franchisesLastClaimDates",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "franchisesUsdInvested",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "franchisesWorkers",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCreateFranchisePrice",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCreateFranchisePriceBNB",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFranchiseDailyEarnings",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFranchiseDailyEarningsBNB",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFranchiseValue",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFranchisesByContinent",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFranchisesLastClaimDates",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFranchisesUsdInvested",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getHireWorkerFranchisePriceBNB",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaintainceFranchiseExpenses",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaintainceFranchiseExpensesBNBPercent",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMetaFranchisesUnclaimedRewards",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getMetaFranchisesUnclaimedRewardsBNB",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getNumberOfMetaFranchises",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPaymentTokenAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalFranchises",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "hireWorker",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "hireWorkerUsingBNB",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "initialize", values: [string]): string;
  encodeFunctionData(
    functionFragment: "lastFranchiseClaimDate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "paused", values?: undefined): string;
  encodeFunctionData(functionFragment: "self", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "sellMetaFranchise",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCreateFranchisePrice",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCreateFranchisePriceBNB",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setFranchiseDailyEarnings",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setFranchiseDailyEarningsBNB",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setHireWorkerFranchisePrice",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaintainceFranchiseExpenses",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaintainceFranchiseExpensesBNBPercent",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setPaymentTokenAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "burnMetaFranchise",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimFromAllFranchises",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimFromAllFranchisesBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "companyFranchises",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "companyFranchisesCounter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createMetaFranchise",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createMetaFranchiseUsingBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createMetaFranchiseUsingUnclaimedBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "franchisesLastClaimDates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "franchisesUsdInvested",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "franchisesWorkers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCreateFranchisePrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCreateFranchisePriceBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFranchiseDailyEarnings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFranchiseDailyEarningsBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFranchiseValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFranchisesByContinent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFranchisesLastClaimDates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFranchisesUsdInvested",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getHireWorkerFranchisePriceBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaintainceFranchiseExpenses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaintainceFranchiseExpensesBNBPercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMetaFranchisesUnclaimedRewards",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMetaFranchisesUnclaimedRewardsBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNumberOfMetaFranchises",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPaymentTokenAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalFranchises",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "hireWorker", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "hireWorkerUsingBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "lastFranchiseClaimDate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "paused", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "self", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "sellMetaFranchise",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCreateFranchisePrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCreateFranchisePriceBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFranchiseDailyEarnings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFranchiseDailyEarningsBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setHireWorkerFranchisePrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaintainceFranchiseExpenses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaintainceFranchiseExpensesBNBPercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPaymentTokenAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "CreateFranchise(address,uint256,uint256,uint256)": EventFragment;
    "Initialized(uint8)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "Paused(address)": EventFragment;
    "Unpaused(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CreateFranchise"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Paused"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Unpaused"): EventFragment;
}

export type CreateFranchiseEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber] & {
    account: string;
    companyId: BigNumber;
    franchiseType: BigNumber;
    amount: BigNumber;
  }
>;

export type InitializedEvent = TypedEvent<[number] & { version: number }>;

export type OwnershipTransferredEvent = TypedEvent<
  [string, string] & { previousOwner: string; newOwner: string }
>;

export type PausedEvent = TypedEvent<[string] & { account: string }>;

export type UnpausedEvent = TypedEvent<[string] & { account: string }>;

export class MetaFranchiseManager extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: MetaFranchiseManagerInterface;

  functions: {
    burnMetaFranchise(
      to: string,
      companyId: BigNumberish,
      amount: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    claimFromAllFranchises(
      _companyId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    claimFromAllFranchisesBNB(
      _companyId: BigNumberish,
      companyOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    companyFranchises(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    companyFranchisesCounter(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    createMetaFranchise(
      to: string,
      companyId: BigNumberish,
      _continentId: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createMetaFranchiseUsingBNB(
      _to: string,
      _companyId: BigNumberish,
      _continentId: BigNumberish,
      _number: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createMetaFranchiseUsingUnclaimedBNB(
      _to: string,
      _companyId: BigNumberish,
      _continentId: BigNumberish,
      _number: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    franchisesLastClaimDates(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    franchisesUsdInvested(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    franchisesWorkers(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getCreateFranchisePrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    getCreateFranchisePriceBNB(overrides?: CallOverrides): Promise<[BigNumber]>;

    getFranchiseDailyEarnings(overrides?: CallOverrides): Promise<[BigNumber]>;

    getFranchiseDailyEarningsBNB(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getFranchiseValue(overrides?: CallOverrides): Promise<[BigNumber]>;

    getFranchisesByContinent(
      _continentId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getFranchisesLastClaimDates(
      _companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getFranchisesUsdInvested(
      companyId: BigNumberish,
      franchiseType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getHireWorkerFranchisePriceBNB(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMaintainceFranchiseExpenses(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMaintainceFranchiseExpensesBNBPercent(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMetaFranchisesUnclaimedRewards(
      companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMetaFranchisesUnclaimedRewardsBNB(
      companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getNumberOfMetaFranchises(
      companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getPaymentTokenAddress(overrides?: CallOverrides): Promise<[string]>;

    getTotalFranchises(overrides?: CallOverrides): Promise<[BigNumber]>;

    hireWorker(
      companyId: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    hireWorkerUsingBNB(
      companyId: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    initialize(
      _metaFranchiseAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    lastFranchiseClaimDate(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    paused(overrides?: CallOverrides): Promise<[boolean]>;

    self(overrides?: CallOverrides): Promise<[string]>;

    sellMetaFranchise(
      to: string,
      companyId: BigNumberish,
      amount: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setCreateFranchisePrice(
      _createFranchisePrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setCreateFranchisePriceBNB(
      _createFranchisePrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setFranchiseDailyEarnings(
      _franchiseDailyEarnings: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setFranchiseDailyEarningsBNB(
      _franchiseDailyEarnings: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setHireWorkerFranchisePrice(
      _hireWorkerFranchisePriceBNB: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setMaintainceFranchiseExpenses(
      _maintainceFranchiseExpenses: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setMaintainceFranchiseExpensesBNBPercent(
      _maintainceFranchiseExpenses: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setPaymentTokenAddress(
      _paymentTokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  burnMetaFranchise(
    to: string,
    companyId: BigNumberish,
    amount: BigNumberish,
    _metaFranchiseType: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  claimFromAllFranchises(
    _companyId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  claimFromAllFranchisesBNB(
    _companyId: BigNumberish,
    companyOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  companyFranchises(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  companyFranchisesCounter(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  createMetaFranchise(
    to: string,
    companyId: BigNumberish,
    _continentId: BigNumberish,
    _metaFranchiseType: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createMetaFranchiseUsingBNB(
    _to: string,
    _companyId: BigNumberish,
    _continentId: BigNumberish,
    _number: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createMetaFranchiseUsingUnclaimedBNB(
    _to: string,
    _companyId: BigNumberish,
    _continentId: BigNumberish,
    _number: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  franchisesLastClaimDates(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  franchisesUsdInvested(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  franchisesWorkers(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getCreateFranchisePrice(overrides?: CallOverrides): Promise<BigNumber>;

  getCreateFranchisePriceBNB(overrides?: CallOverrides): Promise<BigNumber>;

  getFranchiseDailyEarnings(overrides?: CallOverrides): Promise<BigNumber>;

  getFranchiseDailyEarningsBNB(overrides?: CallOverrides): Promise<BigNumber>;

  getFranchiseValue(overrides?: CallOverrides): Promise<BigNumber>;

  getFranchisesByContinent(
    _continentId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getFranchisesLastClaimDates(
    _companyId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getFranchisesUsdInvested(
    companyId: BigNumberish,
    franchiseType: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getHireWorkerFranchisePriceBNB(overrides?: CallOverrides): Promise<BigNumber>;

  getMaintainceFranchiseExpenses(overrides?: CallOverrides): Promise<BigNumber>;

  getMaintainceFranchiseExpensesBNBPercent(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMetaFranchisesUnclaimedRewards(
    companyId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMetaFranchisesUnclaimedRewardsBNB(
    companyId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getNumberOfMetaFranchises(
    companyId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPaymentTokenAddress(overrides?: CallOverrides): Promise<string>;

  getTotalFranchises(overrides?: CallOverrides): Promise<BigNumber>;

  hireWorker(
    companyId: BigNumberish,
    _metaFranchiseType: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  hireWorkerUsingBNB(
    companyId: BigNumberish,
    _metaFranchiseType: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  initialize(
    _metaFranchiseAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  lastFranchiseClaimDate(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  paused(overrides?: CallOverrides): Promise<boolean>;

  self(overrides?: CallOverrides): Promise<string>;

  sellMetaFranchise(
    to: string,
    companyId: BigNumberish,
    amount: BigNumberish,
    _metaFranchiseType: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setCreateFranchisePrice(
    _createFranchisePrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setCreateFranchisePriceBNB(
    _createFranchisePrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setFranchiseDailyEarnings(
    _franchiseDailyEarnings: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setFranchiseDailyEarningsBNB(
    _franchiseDailyEarnings: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setHireWorkerFranchisePrice(
    _hireWorkerFranchisePriceBNB: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setMaintainceFranchiseExpenses(
    _maintainceFranchiseExpenses: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setMaintainceFranchiseExpensesBNBPercent(
    _maintainceFranchiseExpenses: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setPaymentTokenAddress(
    _paymentTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    burnMetaFranchise(
      to: string,
      companyId: BigNumberish,
      amount: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    claimFromAllFranchises(
      _companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    claimFromAllFranchisesBNB(
      _companyId: BigNumberish,
      companyOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    companyFranchises(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    companyFranchisesCounter(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createMetaFranchise(
      to: string,
      companyId: BigNumberish,
      _continentId: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    createMetaFranchiseUsingBNB(
      _to: string,
      _companyId: BigNumberish,
      _continentId: BigNumberish,
      _number: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    createMetaFranchiseUsingUnclaimedBNB(
      _to: string,
      _companyId: BigNumberish,
      _continentId: BigNumberish,
      _number: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    franchisesLastClaimDates(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    franchisesUsdInvested(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    franchisesWorkers(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCreateFranchisePrice(overrides?: CallOverrides): Promise<BigNumber>;

    getCreateFranchisePriceBNB(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchiseDailyEarnings(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchiseDailyEarningsBNB(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchiseValue(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchisesByContinent(
      _continentId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFranchisesLastClaimDates(
      _companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getFranchisesUsdInvested(
      companyId: BigNumberish,
      franchiseType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getHireWorkerFranchisePriceBNB(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaintainceFranchiseExpenses(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaintainceFranchiseExpensesBNBPercent(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMetaFranchisesUnclaimedRewards(
      companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMetaFranchisesUnclaimedRewardsBNB(
      companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNumberOfMetaFranchises(
      companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPaymentTokenAddress(overrides?: CallOverrides): Promise<string>;

    getTotalFranchises(overrides?: CallOverrides): Promise<BigNumber>;

    hireWorker(
      companyId: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    hireWorkerUsingBNB(
      companyId: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    initialize(
      _metaFranchiseAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    lastFranchiseClaimDate(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    paused(overrides?: CallOverrides): Promise<boolean>;

    self(overrides?: CallOverrides): Promise<string>;

    sellMetaFranchise(
      to: string,
      companyId: BigNumberish,
      amount: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setCreateFranchisePrice(
      _createFranchisePrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setCreateFranchisePriceBNB(
      _createFranchisePrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setFranchiseDailyEarnings(
      _franchiseDailyEarnings: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setFranchiseDailyEarningsBNB(
      _franchiseDailyEarnings: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setHireWorkerFranchisePrice(
      _hireWorkerFranchisePriceBNB: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaintainceFranchiseExpenses(
      _maintainceFranchiseExpenses: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaintainceFranchiseExpensesBNBPercent(
      _maintainceFranchiseExpenses: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setPaymentTokenAddress(
      _paymentTokenAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "CreateFranchise(address,uint256,uint256,uint256)"(
      account?: string | null,
      companyId?: null,
      franchiseType?: null,
      amount?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber, BigNumber],
      {
        account: string;
        companyId: BigNumber;
        franchiseType: BigNumber;
        amount: BigNumber;
      }
    >;

    CreateFranchise(
      account?: string | null,
      companyId?: null,
      franchiseType?: null,
      amount?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber, BigNumber],
      {
        account: string;
        companyId: BigNumber;
        franchiseType: BigNumber;
        amount: BigNumber;
      }
    >;

    "Initialized(uint8)"(
      version?: null
    ): TypedEventFilter<[number], { version: number }>;

    Initialized(
      version?: null
    ): TypedEventFilter<[number], { version: number }>;

    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;

    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;

    "Paused(address)"(
      account?: null
    ): TypedEventFilter<[string], { account: string }>;

    Paused(account?: null): TypedEventFilter<[string], { account: string }>;

    "Unpaused(address)"(
      account?: null
    ): TypedEventFilter<[string], { account: string }>;

    Unpaused(account?: null): TypedEventFilter<[string], { account: string }>;
  };

  estimateGas: {
    burnMetaFranchise(
      to: string,
      companyId: BigNumberish,
      amount: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    claimFromAllFranchises(
      _companyId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    claimFromAllFranchisesBNB(
      _companyId: BigNumberish,
      companyOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    companyFranchises(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    companyFranchisesCounter(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createMetaFranchise(
      to: string,
      companyId: BigNumberish,
      _continentId: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createMetaFranchiseUsingBNB(
      _to: string,
      _companyId: BigNumberish,
      _continentId: BigNumberish,
      _number: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createMetaFranchiseUsingUnclaimedBNB(
      _to: string,
      _companyId: BigNumberish,
      _continentId: BigNumberish,
      _number: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    franchisesLastClaimDates(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    franchisesUsdInvested(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    franchisesWorkers(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCreateFranchisePrice(overrides?: CallOverrides): Promise<BigNumber>;

    getCreateFranchisePriceBNB(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchiseDailyEarnings(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchiseDailyEarningsBNB(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchiseValue(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchisesByContinent(
      _continentId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFranchisesLastClaimDates(
      _companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFranchisesUsdInvested(
      companyId: BigNumberish,
      franchiseType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getHireWorkerFranchisePriceBNB(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaintainceFranchiseExpenses(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaintainceFranchiseExpensesBNBPercent(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMetaFranchisesUnclaimedRewards(
      companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMetaFranchisesUnclaimedRewardsBNB(
      companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNumberOfMetaFranchises(
      companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPaymentTokenAddress(overrides?: CallOverrides): Promise<BigNumber>;

    getTotalFranchises(overrides?: CallOverrides): Promise<BigNumber>;

    hireWorker(
      companyId: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    hireWorkerUsingBNB(
      companyId: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    initialize(
      _metaFranchiseAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    lastFranchiseClaimDate(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    paused(overrides?: CallOverrides): Promise<BigNumber>;

    self(overrides?: CallOverrides): Promise<BigNumber>;

    sellMetaFranchise(
      to: string,
      companyId: BigNumberish,
      amount: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setCreateFranchisePrice(
      _createFranchisePrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setCreateFranchisePriceBNB(
      _createFranchisePrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setFranchiseDailyEarnings(
      _franchiseDailyEarnings: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setFranchiseDailyEarningsBNB(
      _franchiseDailyEarnings: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setHireWorkerFranchisePrice(
      _hireWorkerFranchisePriceBNB: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setMaintainceFranchiseExpenses(
      _maintainceFranchiseExpenses: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setMaintainceFranchiseExpensesBNBPercent(
      _maintainceFranchiseExpenses: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setPaymentTokenAddress(
      _paymentTokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    burnMetaFranchise(
      to: string,
      companyId: BigNumberish,
      amount: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    claimFromAllFranchises(
      _companyId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    claimFromAllFranchisesBNB(
      _companyId: BigNumberish,
      companyOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    companyFranchises(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    companyFranchisesCounter(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    createMetaFranchise(
      to: string,
      companyId: BigNumberish,
      _continentId: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createMetaFranchiseUsingBNB(
      _to: string,
      _companyId: BigNumberish,
      _continentId: BigNumberish,
      _number: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createMetaFranchiseUsingUnclaimedBNB(
      _to: string,
      _companyId: BigNumberish,
      _continentId: BigNumberish,
      _number: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    franchisesLastClaimDates(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    franchisesUsdInvested(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    franchisesWorkers(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCreateFranchisePrice(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCreateFranchisePriceBNB(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFranchiseDailyEarnings(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFranchiseDailyEarningsBNB(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFranchiseValue(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getFranchisesByContinent(
      _continentId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFranchisesLastClaimDates(
      _companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFranchisesUsdInvested(
      companyId: BigNumberish,
      franchiseType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getHireWorkerFranchisePriceBNB(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaintainceFranchiseExpenses(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaintainceFranchiseExpensesBNBPercent(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMetaFranchisesUnclaimedRewards(
      companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMetaFranchisesUnclaimedRewardsBNB(
      companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNumberOfMetaFranchises(
      companyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPaymentTokenAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTotalFranchises(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hireWorker(
      companyId: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    hireWorkerUsingBNB(
      companyId: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    initialize(
      _metaFranchiseAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    lastFranchiseClaimDate(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    self(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    sellMetaFranchise(
      to: string,
      companyId: BigNumberish,
      amount: BigNumberish,
      _metaFranchiseType: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setCreateFranchisePrice(
      _createFranchisePrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setCreateFranchisePriceBNB(
      _createFranchisePrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setFranchiseDailyEarnings(
      _franchiseDailyEarnings: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setFranchiseDailyEarningsBNB(
      _franchiseDailyEarnings: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setHireWorkerFranchisePrice(
      _hireWorkerFranchisePriceBNB: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setMaintainceFranchiseExpenses(
      _maintainceFranchiseExpenses: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setMaintainceFranchiseExpensesBNBPercent(
      _maintainceFranchiseExpenses: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setPaymentTokenAddress(
      _paymentTokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
