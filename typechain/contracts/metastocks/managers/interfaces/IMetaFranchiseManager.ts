/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../common";

export interface IMetaFranchiseManagerInterface extends utils.Interface {
  functions: {
    "burnMetaFranchise(address,uint256,uint256,uint8)": FunctionFragment;
    "claimFromAllFranchises(uint256)": FunctionFragment;
    "claimFromAllFranchisesBNB(uint256,address)": FunctionFragment;
    "createMetaFranchise(address,uint256,uint256,uint8)": FunctionFragment;
    "createMetaFranchiseUsingBNB(address,uint256,uint256,uint256)": FunctionFragment;
    "createMetaFranchiseUsingUnclaimedBNB(address,uint256,uint256,uint256)": FunctionFragment;
    "getCreateFranchisePrice()": FunctionFragment;
    "getCreateFranchisePriceBNB()": FunctionFragment;
    "getFranchiseDailyEarnings()": FunctionFragment;
    "getFranchiseDailyEarningsBNB()": FunctionFragment;
    "getFranchiseValue()": FunctionFragment;
    "getFranchisesByContinent(uint256)": FunctionFragment;
    "getFranchisesLastClaimDates(uint256)": FunctionFragment;
    "getFranchisesUsdInvested(uint256,uint256)": FunctionFragment;
    "getHireWorkerFranchisePriceBNB()": FunctionFragment;
    "getMaintainceFranchiseExpenses()": FunctionFragment;
    "getMaintainceFranchiseExpensesBNBPercent()": FunctionFragment;
    "getMetaFranchisesUnclaimedRewards(uint256)": FunctionFragment;
    "getMetaFranchisesUnclaimedRewardsBNB(uint256)": FunctionFragment;
    "getNumberOfMetaFranchises(uint256)": FunctionFragment;
    "getPaymentTokenAddress()": FunctionFragment;
    "getTotalFranchises()": FunctionFragment;
    "hireWorker(uint256,uint8)": FunctionFragment;
    "hireWorkerUsingBNB(uint256,uint8)": FunctionFragment;
    "sellMetaFranchise(address,uint256,uint256,uint8)": FunctionFragment;
    "setCreateFranchisePrice(uint16)": FunctionFragment;
    "setCreateFranchisePriceBNB(uint16)": FunctionFragment;
    "setFranchiseDailyEarnings(uint16)": FunctionFragment;
    "setFranchiseDailyEarningsBNB(uint16)": FunctionFragment;
    "setHireWorkerFranchisePrice(uint16)": FunctionFragment;
    "setMaintainceFranchiseExpenses(uint16)": FunctionFragment;
    "setMaintainceFranchiseExpensesBNBPercent(uint16)": FunctionFragment;
    "setPaymentTokenAddress(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "burnMetaFranchise"
      | "claimFromAllFranchises"
      | "claimFromAllFranchisesBNB"
      | "createMetaFranchise"
      | "createMetaFranchiseUsingBNB"
      | "createMetaFranchiseUsingUnclaimedBNB"
      | "getCreateFranchisePrice"
      | "getCreateFranchisePriceBNB"
      | "getFranchiseDailyEarnings"
      | "getFranchiseDailyEarningsBNB"
      | "getFranchiseValue"
      | "getFranchisesByContinent"
      | "getFranchisesLastClaimDates"
      | "getFranchisesUsdInvested"
      | "getHireWorkerFranchisePriceBNB"
      | "getMaintainceFranchiseExpenses"
      | "getMaintainceFranchiseExpensesBNBPercent"
      | "getMetaFranchisesUnclaimedRewards"
      | "getMetaFranchisesUnclaimedRewardsBNB"
      | "getNumberOfMetaFranchises"
      | "getPaymentTokenAddress"
      | "getTotalFranchises"
      | "hireWorker"
      | "hireWorkerUsingBNB"
      | "sellMetaFranchise"
      | "setCreateFranchisePrice"
      | "setCreateFranchisePriceBNB"
      | "setFranchiseDailyEarnings"
      | "setFranchiseDailyEarningsBNB"
      | "setHireWorkerFranchisePrice"
      | "setMaintainceFranchiseExpenses"
      | "setMaintainceFranchiseExpensesBNBPercent"
      | "setPaymentTokenAddress"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "burnMetaFranchise",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "claimFromAllFranchises",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "claimFromAllFranchisesBNB",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "createMetaFranchise",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "createMetaFranchiseUsingBNB",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "createMetaFranchiseUsingUnclaimedBNB",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getCreateFranchisePrice",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCreateFranchisePriceBNB",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFranchiseDailyEarnings",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFranchiseDailyEarningsBNB",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFranchiseValue",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFranchisesByContinent",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFranchisesLastClaimDates",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFranchisesUsdInvested",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getHireWorkerFranchisePriceBNB",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaintainceFranchiseExpenses",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaintainceFranchiseExpensesBNBPercent",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMetaFranchisesUnclaimedRewards",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getMetaFranchisesUnclaimedRewardsBNB",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getNumberOfMetaFranchises",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getPaymentTokenAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalFranchises",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "hireWorker",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "hireWorkerUsingBNB",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "sellMetaFranchise",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setCreateFranchisePrice",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setCreateFranchisePriceBNB",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setFranchiseDailyEarnings",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setFranchiseDailyEarningsBNB",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setHireWorkerFranchisePrice",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaintainceFranchiseExpenses",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaintainceFranchiseExpensesBNBPercent",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPaymentTokenAddress",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "burnMetaFranchise",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimFromAllFranchises",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimFromAllFranchisesBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createMetaFranchise",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createMetaFranchiseUsingBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createMetaFranchiseUsingUnclaimedBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCreateFranchisePrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCreateFranchisePriceBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFranchiseDailyEarnings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFranchiseDailyEarningsBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFranchiseValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFranchisesByContinent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFranchisesLastClaimDates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFranchisesUsdInvested",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getHireWorkerFranchisePriceBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaintainceFranchiseExpenses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaintainceFranchiseExpensesBNBPercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMetaFranchisesUnclaimedRewards",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMetaFranchisesUnclaimedRewardsBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNumberOfMetaFranchises",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPaymentTokenAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalFranchises",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "hireWorker", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "hireWorkerUsingBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "sellMetaFranchise",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCreateFranchisePrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCreateFranchisePriceBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFranchiseDailyEarnings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFranchiseDailyEarningsBNB",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setHireWorkerFranchisePrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaintainceFranchiseExpenses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaintainceFranchiseExpensesBNBPercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPaymentTokenAddress",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IMetaFranchiseManager extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IMetaFranchiseManagerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    burnMetaFranchise(
      to: PromiseOrValue<string>,
      companyId: PromiseOrValue<BigNumberish>,
      amount: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    claimFromAllFranchises(
      _companyId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    claimFromAllFranchisesBNB(
      _companyId: PromiseOrValue<BigNumberish>,
      companyOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    createMetaFranchise(
      to: PromiseOrValue<string>,
      companyId: PromiseOrValue<BigNumberish>,
      _continentId: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    createMetaFranchiseUsingBNB(
      _to: PromiseOrValue<string>,
      _companyId: PromiseOrValue<BigNumberish>,
      _continentId: PromiseOrValue<BigNumberish>,
      _number: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    createMetaFranchiseUsingUnclaimedBNB(
      _to: PromiseOrValue<string>,
      _companyId: PromiseOrValue<BigNumberish>,
      _continentId: PromiseOrValue<BigNumberish>,
      _number: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getCreateFranchisePrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    getCreateFranchisePriceBNB(overrides?: CallOverrides): Promise<[BigNumber]>;

    getFranchiseDailyEarnings(overrides?: CallOverrides): Promise<[BigNumber]>;

    getFranchiseDailyEarningsBNB(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getFranchiseValue(overrides?: CallOverrides): Promise<[BigNumber]>;

    getFranchisesByContinent(
      _continentId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getFranchisesLastClaimDates(
      _companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getFranchisesUsdInvested(
      companyId: PromiseOrValue<BigNumberish>,
      franchiseType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getHireWorkerFranchisePriceBNB(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMaintainceFranchiseExpenses(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMaintainceFranchiseExpensesBNBPercent(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMetaFranchisesUnclaimedRewards(
      companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMetaFranchisesUnclaimedRewardsBNB(
      companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getNumberOfMetaFranchises(
      companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getPaymentTokenAddress(overrides?: CallOverrides): Promise<[string]>;

    getTotalFranchises(overrides?: CallOverrides): Promise<[BigNumber]>;

    hireWorker(
      companyId: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    hireWorkerUsingBNB(
      companyId: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    sellMetaFranchise(
      to: PromiseOrValue<string>,
      companyId: PromiseOrValue<BigNumberish>,
      amount: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setCreateFranchisePrice(
      _createFranchisePrice: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setCreateFranchisePriceBNB(
      _createFranchisePrice: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setFranchiseDailyEarnings(
      _franchiseDailyEarnings: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setFranchiseDailyEarningsBNB(
      _franchiseDailyEarnings: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setHireWorkerFranchisePrice(
      _hireWorkerFranchisePriceBNB: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setMaintainceFranchiseExpenses(
      _maintainceFranchiseExpenses: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setMaintainceFranchiseExpensesBNBPercent(
      _maintainceFranchiseExpenses: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPaymentTokenAddress(
      _paymentTokenAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  burnMetaFranchise(
    to: PromiseOrValue<string>,
    companyId: PromiseOrValue<BigNumberish>,
    amount: PromiseOrValue<BigNumberish>,
    _metaFranchiseType: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  claimFromAllFranchises(
    _companyId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  claimFromAllFranchisesBNB(
    _companyId: PromiseOrValue<BigNumberish>,
    companyOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  createMetaFranchise(
    to: PromiseOrValue<string>,
    companyId: PromiseOrValue<BigNumberish>,
    _continentId: PromiseOrValue<BigNumberish>,
    _metaFranchiseType: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  createMetaFranchiseUsingBNB(
    _to: PromiseOrValue<string>,
    _companyId: PromiseOrValue<BigNumberish>,
    _continentId: PromiseOrValue<BigNumberish>,
    _number: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  createMetaFranchiseUsingUnclaimedBNB(
    _to: PromiseOrValue<string>,
    _companyId: PromiseOrValue<BigNumberish>,
    _continentId: PromiseOrValue<BigNumberish>,
    _number: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getCreateFranchisePrice(overrides?: CallOverrides): Promise<BigNumber>;

  getCreateFranchisePriceBNB(overrides?: CallOverrides): Promise<BigNumber>;

  getFranchiseDailyEarnings(overrides?: CallOverrides): Promise<BigNumber>;

  getFranchiseDailyEarningsBNB(overrides?: CallOverrides): Promise<BigNumber>;

  getFranchiseValue(overrides?: CallOverrides): Promise<BigNumber>;

  getFranchisesByContinent(
    _continentId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getFranchisesLastClaimDates(
    _companyId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getFranchisesUsdInvested(
    companyId: PromiseOrValue<BigNumberish>,
    franchiseType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getHireWorkerFranchisePriceBNB(overrides?: CallOverrides): Promise<BigNumber>;

  getMaintainceFranchiseExpenses(overrides?: CallOverrides): Promise<BigNumber>;

  getMaintainceFranchiseExpensesBNBPercent(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMetaFranchisesUnclaimedRewards(
    companyId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMetaFranchisesUnclaimedRewardsBNB(
    companyId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getNumberOfMetaFranchises(
    companyId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPaymentTokenAddress(overrides?: CallOverrides): Promise<string>;

  getTotalFranchises(overrides?: CallOverrides): Promise<BigNumber>;

  hireWorker(
    companyId: PromiseOrValue<BigNumberish>,
    _metaFranchiseType: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  hireWorkerUsingBNB(
    companyId: PromiseOrValue<BigNumberish>,
    _metaFranchiseType: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  sellMetaFranchise(
    to: PromiseOrValue<string>,
    companyId: PromiseOrValue<BigNumberish>,
    amount: PromiseOrValue<BigNumberish>,
    _metaFranchiseType: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setCreateFranchisePrice(
    _createFranchisePrice: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setCreateFranchisePriceBNB(
    _createFranchisePrice: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setFranchiseDailyEarnings(
    _franchiseDailyEarnings: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setFranchiseDailyEarningsBNB(
    _franchiseDailyEarnings: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setHireWorkerFranchisePrice(
    _hireWorkerFranchisePriceBNB: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setMaintainceFranchiseExpenses(
    _maintainceFranchiseExpenses: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setMaintainceFranchiseExpensesBNBPercent(
    _maintainceFranchiseExpenses: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPaymentTokenAddress(
    _paymentTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    burnMetaFranchise(
      to: PromiseOrValue<string>,
      companyId: PromiseOrValue<BigNumberish>,
      amount: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    claimFromAllFranchises(
      _companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    claimFromAllFranchisesBNB(
      _companyId: PromiseOrValue<BigNumberish>,
      companyOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    createMetaFranchise(
      to: PromiseOrValue<string>,
      companyId: PromiseOrValue<BigNumberish>,
      _continentId: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    createMetaFranchiseUsingBNB(
      _to: PromiseOrValue<string>,
      _companyId: PromiseOrValue<BigNumberish>,
      _continentId: PromiseOrValue<BigNumberish>,
      _number: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    createMetaFranchiseUsingUnclaimedBNB(
      _to: PromiseOrValue<string>,
      _companyId: PromiseOrValue<BigNumberish>,
      _continentId: PromiseOrValue<BigNumberish>,
      _number: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    getCreateFranchisePrice(overrides?: CallOverrides): Promise<BigNumber>;

    getCreateFranchisePriceBNB(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchiseDailyEarnings(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchiseDailyEarningsBNB(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchiseValue(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchisesByContinent(
      _continentId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFranchisesLastClaimDates(
      _companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getFranchisesUsdInvested(
      companyId: PromiseOrValue<BigNumberish>,
      franchiseType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getHireWorkerFranchisePriceBNB(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaintainceFranchiseExpenses(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaintainceFranchiseExpensesBNBPercent(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMetaFranchisesUnclaimedRewards(
      companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMetaFranchisesUnclaimedRewardsBNB(
      companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNumberOfMetaFranchises(
      companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPaymentTokenAddress(overrides?: CallOverrides): Promise<string>;

    getTotalFranchises(overrides?: CallOverrides): Promise<BigNumber>;

    hireWorker(
      companyId: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    hireWorkerUsingBNB(
      companyId: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    sellMetaFranchise(
      to: PromiseOrValue<string>,
      companyId: PromiseOrValue<BigNumberish>,
      amount: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setCreateFranchisePrice(
      _createFranchisePrice: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setCreateFranchisePriceBNB(
      _createFranchisePrice: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setFranchiseDailyEarnings(
      _franchiseDailyEarnings: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setFranchiseDailyEarningsBNB(
      _franchiseDailyEarnings: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setHireWorkerFranchisePrice(
      _hireWorkerFranchisePriceBNB: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaintainceFranchiseExpenses(
      _maintainceFranchiseExpenses: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaintainceFranchiseExpensesBNBPercent(
      _maintainceFranchiseExpenses: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPaymentTokenAddress(
      _paymentTokenAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    burnMetaFranchise(
      to: PromiseOrValue<string>,
      companyId: PromiseOrValue<BigNumberish>,
      amount: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    claimFromAllFranchises(
      _companyId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    claimFromAllFranchisesBNB(
      _companyId: PromiseOrValue<BigNumberish>,
      companyOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    createMetaFranchise(
      to: PromiseOrValue<string>,
      companyId: PromiseOrValue<BigNumberish>,
      _continentId: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    createMetaFranchiseUsingBNB(
      _to: PromiseOrValue<string>,
      _companyId: PromiseOrValue<BigNumberish>,
      _continentId: PromiseOrValue<BigNumberish>,
      _number: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    createMetaFranchiseUsingUnclaimedBNB(
      _to: PromiseOrValue<string>,
      _companyId: PromiseOrValue<BigNumberish>,
      _continentId: PromiseOrValue<BigNumberish>,
      _number: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getCreateFranchisePrice(overrides?: CallOverrides): Promise<BigNumber>;

    getCreateFranchisePriceBNB(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchiseDailyEarnings(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchiseDailyEarningsBNB(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchiseValue(overrides?: CallOverrides): Promise<BigNumber>;

    getFranchisesByContinent(
      _continentId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFranchisesLastClaimDates(
      _companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFranchisesUsdInvested(
      companyId: PromiseOrValue<BigNumberish>,
      franchiseType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getHireWorkerFranchisePriceBNB(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaintainceFranchiseExpenses(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaintainceFranchiseExpensesBNBPercent(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMetaFranchisesUnclaimedRewards(
      companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMetaFranchisesUnclaimedRewardsBNB(
      companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNumberOfMetaFranchises(
      companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPaymentTokenAddress(overrides?: CallOverrides): Promise<BigNumber>;

    getTotalFranchises(overrides?: CallOverrides): Promise<BigNumber>;

    hireWorker(
      companyId: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    hireWorkerUsingBNB(
      companyId: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    sellMetaFranchise(
      to: PromiseOrValue<string>,
      companyId: PromiseOrValue<BigNumberish>,
      amount: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setCreateFranchisePrice(
      _createFranchisePrice: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setCreateFranchisePriceBNB(
      _createFranchisePrice: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setFranchiseDailyEarnings(
      _franchiseDailyEarnings: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setFranchiseDailyEarningsBNB(
      _franchiseDailyEarnings: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setHireWorkerFranchisePrice(
      _hireWorkerFranchisePriceBNB: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setMaintainceFranchiseExpenses(
      _maintainceFranchiseExpenses: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setMaintainceFranchiseExpensesBNBPercent(
      _maintainceFranchiseExpenses: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPaymentTokenAddress(
      _paymentTokenAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    burnMetaFranchise(
      to: PromiseOrValue<string>,
      companyId: PromiseOrValue<BigNumberish>,
      amount: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    claimFromAllFranchises(
      _companyId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    claimFromAllFranchisesBNB(
      _companyId: PromiseOrValue<BigNumberish>,
      companyOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    createMetaFranchise(
      to: PromiseOrValue<string>,
      companyId: PromiseOrValue<BigNumberish>,
      _continentId: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    createMetaFranchiseUsingBNB(
      _to: PromiseOrValue<string>,
      _companyId: PromiseOrValue<BigNumberish>,
      _continentId: PromiseOrValue<BigNumberish>,
      _number: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    createMetaFranchiseUsingUnclaimedBNB(
      _to: PromiseOrValue<string>,
      _companyId: PromiseOrValue<BigNumberish>,
      _continentId: PromiseOrValue<BigNumberish>,
      _number: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getCreateFranchisePrice(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCreateFranchisePriceBNB(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFranchiseDailyEarnings(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFranchiseDailyEarningsBNB(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFranchiseValue(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getFranchisesByContinent(
      _continentId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFranchisesLastClaimDates(
      _companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFranchisesUsdInvested(
      companyId: PromiseOrValue<BigNumberish>,
      franchiseType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getHireWorkerFranchisePriceBNB(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaintainceFranchiseExpenses(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaintainceFranchiseExpensesBNBPercent(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMetaFranchisesUnclaimedRewards(
      companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMetaFranchisesUnclaimedRewardsBNB(
      companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNumberOfMetaFranchises(
      companyId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPaymentTokenAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTotalFranchises(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hireWorker(
      companyId: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    hireWorkerUsingBNB(
      companyId: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    sellMetaFranchise(
      to: PromiseOrValue<string>,
      companyId: PromiseOrValue<BigNumberish>,
      amount: PromiseOrValue<BigNumberish>,
      _metaFranchiseType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setCreateFranchisePrice(
      _createFranchisePrice: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setCreateFranchisePriceBNB(
      _createFranchisePrice: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setFranchiseDailyEarnings(
      _franchiseDailyEarnings: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setFranchiseDailyEarningsBNB(
      _franchiseDailyEarnings: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setHireWorkerFranchisePrice(
      _hireWorkerFranchisePriceBNB: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setMaintainceFranchiseExpenses(
      _maintainceFranchiseExpenses: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setMaintainceFranchiseExpensesBNBPercent(
      _maintainceFranchiseExpenses: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPaymentTokenAddress(
      _paymentTokenAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
