/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetaCompanyManager,
  MetaCompanyManagerInterface,
} from "../MetaCompanyManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
    ],
    name: "CreateCompany",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum MetaFranchiseType",
        name: "_metaFranchiseType",
        type: "uint8",
      },
    ],
    name: "burnMetaFranchise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ceos",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ceosCompanies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimFromAllFranchises",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimFromAllFranchisesBNB",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "companiesCeos",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "createCompany",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "createFranchise",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "createMetaFranchiseUsingBNB",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "createMetaFranchiseUsingUnclaimedBNB",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCEOS",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
    ],
    name: "getCompanyCEOAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getCompanyId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreateFranchisePriceBNB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFranchiseValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getFranchisesLastClaimDates",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getMetaFranchisesUnclaimedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getMetaFranchisesUnclaimedRewardsBNB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getNumberOfMetaFranchises",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalCeos",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalCompanies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalFranchises",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalInvested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_metaCompanyAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_metaFranchiseManagerAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isCeo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "self",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum MetaFranchiseType",
        name: "_metaFranchiseType",
        type: "uint8",
      },
    ],
    name: "sellMetaFranchise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506117d5806100206000396000f3fe6080604052600436106101735760003560e01c806301ffc9a71461017857806303717bbe146101ad5780630cff9eb1146101c45780631165e6ab146101e757806321203038146102205780632cd0a0651461024d5780633d4bf8601461026d5780634610e4fe1461028d578063485cc955146102ad578063486b1b11146102cd5780635c975abb146102e25780635f945733146102fa5780637104ddb21461030f57806374429e9b1461032b578063885d5adf146103585780639d58f3e014610378578063a3b43bc51461038d578063ab73b8c2146103a2578063bc083917146103b5578063bc197c81146103eb578063d6f343c514610424578063d8e6d2cc1461045a578063d9b4c6a11461046d578063dc8dccc614610480578063e7191984146104b6578063f23a6e61146104cb578063f2fde38b146104f7578063f81a12d714610517578063fc08e49b14610547578063ff0b9f8d14610569578063ff0bc1901461057e578063ffc880e614610591575b600080fd5b34801561018457600080fd5b50610198610193366004611263565b6105b1565b60405190151581526020015b60405180910390f35b3480156101b957600080fd5b506101c26105c2565b005b3480156101d057600080fd5b506101d9610695565b6040519081526020016101a4565b3480156101f357600080fd5b506101986102023660046112b0565b6001600160a01b031660009081526069602052604090205460ff1690565b34801561022c57600080fd5b506101d961023b3660046112b0565b60676020526000908152604090205481565b34801561025957600080fd5b506101d96102683660046112b0565b610708565b34801561027957600080fd5b506101d96102883660046112b0565b6107e1565b34801561029957600080fd5b506101c26102a83660046112cb565b61081a565b3480156102b957600080fd5b506101c26102c8366004611317565b610888565b3480156102d957600080fd5b50606b546101d9565b3480156102ee57600080fd5b5060335460ff16610198565b34801561030657600080fd5b50606c546101d9565b34801561031b57600080fd5b50305b6040516101a4919061134a565b34801561033757600080fd5b5061034b6103463660046112b0565b6109e1565b6040516101a4919061135e565b34801561036457600080fd5b506101c26103733660046112cb565b610abe565b34801561038457600080fd5b506101d9610af4565b34801561039957600080fd5b506101d9610b3e565b6101c26103b03660046112b0565b610b88565b3480156103c157600080fd5b5061031e6103d03660046113a2565b6068602052600090815260409020546001600160a01b031681565b3480156103f757600080fd5b5061040b6104063660046114fe565b610ce7565b6040516001600160e01b031990911681526020016101a4565b34801561043057600080fd5b506101d961043f3660046112b0565b6001600160a01b031660009081526067602052604090205490565b6101c26104683660046113a2565b610cf9565b6101c261047b3660046112b0565b610e61565b34801561048c57600080fd5b5061031e61049b3660046113a2565b6000908152606860205260409020546001600160a01b031690565b3480156104c257600080fd5b50606a546101d9565b3480156104d757600080fd5b5061040b6104e63660046115a7565b63f23a6e6160e01b95945050505050565b34801561050357600080fd5b506101c26105123660046112b0565b610f9e565b34801561052357600080fd5b506101986105323660046112b0565b60696020526000908152604090205460ff1681565b34801561055357600080fd5b5061055c61106c565b6040516101a4919061160b565b34801561057557600080fd5b506101c2611122565b6101c261058c3660046113a2565b6111b9565b34801561059d57600080fd5b506101d96105ac3660046112b0565b6111f5565b60006105bc8261122e565b92915050565b60665460405163d6f343c560e01b81526001600160a01b0390911690633f2027cd90309063d6f343c5906105fa90339060040161134a565b602060405180830381865afa158015610617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063b919061164c565b6040516001600160e01b031960e084901b16815260048101919091523360248201526044015b600060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b50505050565b60665460408051630cff9eb160e01b815290516000926001600160a01b031691630cff9eb19160048083019260209291908290030181865afa1580156106df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610703919061164c565b905090565b60665460405163d6f343c560e01b81526000916001600160a01b03169063bd0e5ddf90309063d6f343c59061074190879060040161134a565b602060405180830381865afa15801561075e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610782919061164c565b6040518263ffffffff1660e01b81526004016107a091815260200190565b602060405180830381865afa1580156107bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bc919061164c565b60665460405163d6f343c560e01b81526000916001600160a01b03169063959fad2090309063d6f343c59061074190879060040161134a565b606654604051632308727f60e11b81526001600160a01b0390911690634610e4fe90610850908790879087908790600401611687565b600060405180830381600087803b15801561086a57600080fd5b505af115801561087e573d6000803e3d6000fd5b5050505050505050565b600054610100900460ff16158080156108a85750600054600160ff909116105b806108c25750303b1580156108c2575060005460ff166001145b61092a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561094d576000805461ff0019166101001790555b606d8054336001600160a01b0319918216179091556065805482166001600160a01b0386811691909117909155606680549092169084161790556000606a819055606b819055606c5580156109dc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60665460405163d6f343c560e01b81526060916001600160a01b031690631a161fba90309063d6f343c590610a1a90879060040161134a565b602060405180830381865afa158015610a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5b919061164c565b6040518263ffffffff1660e01b8152600401610a7991815260200190565b600060405180830381865afa158015610a96573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105bc91908101906116b2565b60665460405163885d5adf60e01b81526001600160a01b039091169063885d5adf90610850908790879087908790600401611687565b606654604080516304eac79f60e51b815290516000926001600160a01b031691639d58f3e09160048083019260209291908290030181865afa1580156106df573d6000803e3d6000fd5b6066546040805163a3b43bc560e01b815290516000926001600160a01b03169163a3b43bc59160048083019260209291908290030181865afa1580156106df573d6000803e3d6000fd5b6001600160a01b03811660009081526069602052604090205460ff16610bfe5760405163d9b4c6a160e01b8152309063d9b4c6a190610bcb90849060040161134a565b600060405180830381600087803b158015610be557600080fd5b505af1158015610bf9573d6000803e3d6000fd5b505050505b60665460405163d6f343c560e01b81526001600160a01b039091169063e5c50162908290309063d6f343c590610c3890879060040161134a565b602060405180830381865afa158015610c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c79919061164c565b6000806040518563ffffffff1660e01b8152600401610c9b9493929190611687565b600060405180830381600087803b158015610cb557600080fd5b505af1158015610cc9573d6000803e3d6000fd5b5050505034606c6000828254610cdf9190611758565b909155505050565b63bc197c8160e01b5b95945050505050565b3360009081526069602052604090205460ff16610d665760405163d9b4c6a160e01b8152309063d9b4c6a190610d3390339060040161134a565b600060405180830381600087803b158015610d4d57600080fd5b505af1158015610d61573d6000803e3d6000fd5b505050505b60665460405163d6f343c560e01b81526001600160a01b039091169063208ca31f9034908390309063d6f343c590610da290339060040161134a565b602060405180830381865afa158015610dbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de3919061164c565b6040516001600160e01b031960e086901b1681526001600160a01b039092166004830152602482015260006044820152606481018590526084016000604051808303818588803b158015610e3657600080fd5b505af1158015610e4a573d6000803e3d6000fd5b505050505034606c6000828254610cdf9190611758565b6065546040516340d097c360e01b81526000916001600160a01b0316906340d097c390610e9290859060040161134a565b6020604051808303816000875af1158015610eb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed5919061164c565b6001600160a01b03831660008181526067602090815260408083208590558483526068825280832080546001600160a01b0319168517905592825260699052908120805460ff19166001179055606a805492935090610f3383611770565b9091555050606b8054906000610f4883611770565b90915550506001600160a01b0382166000818152606760209081526040918290205491519182527fe38265a604917a38d3b0f82f061e30793a578a7181d8b0d880e84ec70b0da81a910160405180910390a25050565b606d546001600160a01b03163314610fb557600080fd5b6001600160a01b03811661101a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610921565b606d80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606000606b546001600160401b0381111561108a5761108a6113bb565b6040519080825280602002602001820160405280156110b3578160200160208202803683370190505b50905060005b606b5481101561111c5760008181526068602052604090205482516001600160a01b03909116908390839081106110f2576110f2611789565b6001600160a01b03909216602092830291909101909101528061111481611770565b9150506110b9565b50919050565b60665460405163d6f343c560e01b81526001600160a01b03909116906399dc7d9c90309063d6f343c59061115a90339060040161134a565b602060405180830381865afa158015611177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119b919061164c565b6040518263ffffffff1660e01b815260040161066191815260200190565b60665460405163d6f343c560e01b81526001600160a01b039091169063597effaf9034908390309063d6f343c590610da290339060040161134a565b60665460405163d6f343c560e01b81526000916001600160a01b0316906335ea03a290309063d6f343c59061074190879060040161134a565b60006001600160e01b03198216630271189760e51b14806105bc57506301ffc9a760e01b6001600160e01b03198316146105bc565b60006020828403121561127557600080fd5b81356001600160e01b03198116811461128d57600080fd5b9392505050565b80356001600160a01b03811681146112ab57600080fd5b919050565b6000602082840312156112c257600080fd5b61128d82611294565b600080600080608085870312156112e157600080fd5b6112ea85611294565b935060208501359250604085013591506060850135601a811061130c57600080fd5b939692955090935050565b6000806040838503121561132a57600080fd5b61133383611294565b915061134160208401611294565b90509250929050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b818110156113965783518352928401929184019160010161137a565b50909695505050505050565b6000602082840312156113b457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156113f9576113f96113bb565b604052919050565b60006001600160401b0382111561141a5761141a6113bb565b5060051b60200190565b600082601f83011261143557600080fd5b8135602061144a61144583611401565b6113d1565b82815260059290921b8401810191818101908684111561146957600080fd5b8286015b84811015611484578035835291830191830161146d565b509695505050505050565b600082601f8301126114a057600080fd5b81356001600160401b038111156114b9576114b96113bb565b6114cc601f8201601f19166020016113d1565b8181528460208386010111156114e157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561151657600080fd5b61151f86611294565b945061152d60208701611294565b935060408601356001600160401b038082111561154957600080fd5b61155589838a01611424565b9450606088013591508082111561156b57600080fd5b61157789838a01611424565b9350608088013591508082111561158d57600080fd5b5061159a8882890161148f565b9150509295509295909350565b600080600080600060a086880312156115bf57600080fd5b6115c886611294565b94506115d660208701611294565b9350604086013592506060860135915060808601356001600160401b038111156115ff57600080fd5b61159a8882890161148f565b6020808252825182820181905260009190848201906040850190845b818110156113965783516001600160a01b031683529284019291840191600101611627565b60006020828403121561165e57600080fd5b5051919050565b601a811061168357634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b0385168152602081018490526040810183905260808101610cf06060830184611665565b600060208083850312156116c557600080fd5b82516001600160401b038111156116db57600080fd5b8301601f810185136116ec57600080fd5b80516116fa61144582611401565b81815260059190911b8201830190838101908783111561171957600080fd5b928401925b828410156117375783518252928401929084019061171e565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561176b5761176b611742565b500190565b60006001820161178257611782611742565b5060010190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212204bc1986db4b16682147a6ba136f42b257673bffc55bb873b02ccb178cc5083ba64736f6c634300080f0033";

export class MetaCompanyManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetaCompanyManager> {
    return super.deploy(overrides || {}) as Promise<MetaCompanyManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MetaCompanyManager {
    return super.attach(address) as MetaCompanyManager;
  }
  connect(signer: Signer): MetaCompanyManager__factory {
    return super.connect(signer) as MetaCompanyManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaCompanyManagerInterface {
    return new utils.Interface(_abi) as MetaCompanyManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaCompanyManager {
    return new Contract(address, _abi, signerOrProvider) as MetaCompanyManager;
  }
}
