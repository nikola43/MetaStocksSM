/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetaShareManager,
  MetaShareManagerInterface,
} from "../MetaShareManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "franchiseId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnMetaFranchiseShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "franchiseId",
        type: "uint256",
      },
    ],
    name: "createMetaFranchiseShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "franchisesShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "franchiseId",
        type: "uint256",
      },
    ],
    name: "getNumberOfMetaFranchiseShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_metaFranchiseAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "self",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "companyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "franchiseId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellMetaFranchiseShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c8c806100206000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c806301ffc9a7146100935780630be378ff146100bb57806349389870146100d05780637104ddb2146101095780637b3e71be146101175780639a359b391461012a578063bc197c811461013d578063c4d66de814610175578063db71fd8214610188578063f23a6e61146101b3575b600080fd5b6100a66100a136600461076c565b6101d2565b60405190151581526020015b60405180910390f35b6100ce6100c936600461079d565b6101e3565b005b6100fb6100de3660046107c9565b600560209081526000928352604080842090915290825290205481565b6040519081526020016100b2565b6040513081526020016100b2565b6100ce61012536600461079d565b610307565b6100ce610138366004610807565b6103e7565b61015c61014b36600461096e565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016100b2565b6100ce610183366004610a17565b610485565b6100fb6101963660046107c9565b600091825260056020908152604080842092845291905290205490565b61015c6101c1366004610a32565b63f23a6e6160e01b95945050505050565b60006101dd826106d7565b92915050565b60008381526005602090815260408083208584529091529020548111156102255760405162461bcd60e51b815260040161021c90610a96565b60405180910390fd5b600083815260056020908152604080832085845290915281205461024a908390610ae2565b10156102685760405162461bcd60e51b815260040161021c90610af9565b600083815260056020908152604080832085845290915281208054839290610291908490610ae2565b90915550506001546040516344bfaf4f60e01b815233600482015260248101849052604481018390526001600160a01b03909116906344bfaf4f906064015b600060405180830381600087803b1580156102ea57600080fd5b505af11580156102fe573d6000803e3d6000fd5b50505050505050565b60008381526005602090815260408083208584529091529020548111156103405760405162461bcd60e51b815260040161021c90610a96565b6000838152600560209081526040808320858452909152812054610365908390610ae2565b10156103835760405162461bcd60e51b815260040161021c90610af9565b6000838152600560209081526040808320858452909152812080548392906103ac908490610ae2565b909155505060018054604051637921219560e11b81526001600160a01b039091169163f242432a916102d09130913391908790600401610b59565b600154604051630fbfeffd60e11b81526001600160a01b0390911690631f7fdffa9061041c9086906003906004908101610bdc565b600060405180830381600087803b15801561043657600080fd5b505af115801561044a573d6000803e3d6000fd5b505060025460008581526005602090815260408083208784529091528120805492945092509061047b908490610c25565b9091555050505050565b600054610100900460ff16158080156104a55750600054600160ff909116105b806104bf5750303b1580156104bf575060005460ff166001145b6105225760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161021c565b6000805460ff191660011790558015610545576000805461ff0019166101001790555b6000805462010000600160b01b0319163362010000021790556064600281905560408051828152610ca081019091529060208201610c80803683375050815161059592600392506020019061070c565b506002546001600160401b038111156105b0576105b061083a565b6040519080825280602002602001820160405280156105d9578160200160208202803683370190505b5080516105ee9160049160209091019061070c565b5060005b6002548110156106715760038054600181810190925560007fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910181905560048054808401825591527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01558061066981610c3d565b9150506105f2565b50600180546001600160a01b0319166001600160a01b03841617905580156106d3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b60006001600160e01b03198216630271189760e51b14806101dd57506301ffc9a760e01b6001600160e01b03198316146101dd565b828054828255906000526020600020908101928215610747579160200282015b8281111561074757825182559160200191906001019061072c565b50610753929150610757565b5090565b5b808211156107535760008155600101610758565b60006020828403121561077e57600080fd5b81356001600160e01b03198116811461079657600080fd5b9392505050565b6000806000606084860312156107b257600080fd5b505081359360208301359350604090920135919050565b600080604083850312156107dc57600080fd5b50508035926020909101359150565b80356001600160a01b038116811461080257600080fd5b919050565b60008060006060848603121561081c57600080fd5b610825846107eb565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156108785761087861083a565b604052919050565b600082601f83011261089157600080fd5b813560206001600160401b038211156108ac576108ac61083a565b8160051b6108bb828201610850565b92835284810182019282810190878511156108d557600080fd5b83870192505b848310156108f4578235825291830191908301906108db565b979650505050505050565b600082601f83011261091057600080fd5b81356001600160401b038111156109295761092961083a565b61093c601f8201601f1916602001610850565b81815284602083860101111561095157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561098657600080fd5b61098f866107eb565b945061099d602087016107eb565b935060408601356001600160401b03808211156109b957600080fd5b6109c589838a01610880565b945060608801359150808211156109db57600080fd5b6109e789838a01610880565b935060808801359150808211156109fd57600080fd5b50610a0a888289016108ff565b9150509295509295909350565b600060208284031215610a2957600080fd5b610796826107eb565b600080600080600060a08688031215610a4a57600080fd5b610a53866107eb565b9450610a61602087016107eb565b9350604086013592506060860135915060808601356001600160401b03811115610a8a57600080fd5b610a0a888289016108ff565b6020808252601c908201527b4275726e206578636564656420736861726520616c6c6f77616e636560201b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015610af457610af4610acc565b500390565b6020808252602a908201527f42616c616e6365206166746572206275726e2063616e74206265206c6f776572604082015269207468616e207a65726f60b01b606082015260800190565b600381526203078360ec1b602082015260400190565b6001600160a01b03858116825284166020820152604081018390526060810182905260a060808201819052600090610b92908301610b43565b9695505050505050565b6000815480845260208085019450836000528060002060005b83811015610bd157815487529582019560019182019101610bb5565b509495945050505050565b6001600160a01b0384168152608060208201819052600090610c0090830185610b9c565b8281036040840152610c128185610b9c565b90508281036060840152610b9281610b43565b60008219821115610c3857610c38610acc565b500190565b600060018201610c4f57610c4f610acc565b506001019056fea2646970667358221220536eb7f35ca248d6bf2a5ae20dc6047146c7c8e4df27514164fbbb4acd78d72464736f6c634300080f0033";

export class MetaShareManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetaShareManager> {
    return super.deploy(overrides || {}) as Promise<MetaShareManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MetaShareManager {
    return super.attach(address) as MetaShareManager;
  }
  connect(signer: Signer): MetaShareManager__factory {
    return super.connect(signer) as MetaShareManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaShareManagerInterface {
    return new utils.Interface(_abi) as MetaShareManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaShareManager {
    return new Contract(address, _abi, signerOrProvider) as MetaShareManager;
  }
}
