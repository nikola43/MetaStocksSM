/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MultiSigWallet,
  MultiSigWalletInterface,
} from "../../contracts/MultiSigWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_numConfirmationsRequired",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "ConfirmTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "ExecuteTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "RevokeConfirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "SubmitTransaction",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "confirmTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "getTransaction",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "numConfirmations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numConfirmationsRequired",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "revokeConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "submitTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "numConfirmations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200147b3803806200147b833981016040819052620000349162000281565b60008251116200007d5760405162461bcd60e51b815260206004820152600f60248201526e1bdddb995c9cc81c995c5d5a5c9959608a1b60448201526064015b60405180910390fd5b6000811180156200008f575081518111155b620000ee5760405162461bcd60e51b815260206004820152602860248201527f696e76616c6964206e756d626572206f6620726571756972656420636f6e6669604482015267726d6174696f6e7360c01b606482015260840162000074565b60005b8251811015620002435760008382815181106200011257620001126200035b565b6020026020010151905060006001600160a01b0316816001600160a01b031603620001705760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b604482015260640162000074565b6001600160a01b03811660009081526001602052604090205460ff1615620001ce5760405162461bcd60e51b815260206004820152601060248201526f6f776e6572206e6f7420756e6971756560801b604482015260640162000074565b6001600160a01b031660008181526001602081905260408220805460ff191682179055815490810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319169091179055806200023a8162000371565b915050620000f1565b506002555062000399565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200027c57600080fd5b919050565b600080604083850312156200029557600080fd5b82516001600160401b0380821115620002ad57600080fd5b818501915085601f830112620002c257600080fd5b8151602082821115620002d957620002d96200024e565b8160051b604051601f19603f830116810181811086821117156200030157620003016200024e565b6040529283528183019350848101820192898411156200032057600080fd5b948201945b838610156200034957620003398662000264565b8552948201949382019362000325565b97909101519698969750505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200039257634e487b7160e01b600052601160045260246000fd5b5060010190565b6110d280620003a96000396000f3fe60806040526004361061009b5760003560e01c8063025e7c27146100e157806320ea8d861461011e5780632e7700f0146101405780632f54bf6e1461015f57806333ea3dc81461019f57806380f59a65146101d05780639ace38c21461020b578063a0e67e2b1461022b578063c01a8c841461024d578063c64274741461026d578063d0549b851461028d578063ee22610b146102a357600080fd5b366100dc576040805134815247602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2005b600080fd5b3480156100ed57600080fd5b506101016100fc366004610baf565b6102c3565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012a57600080fd5b5061013e610139366004610baf565b6102ed565b005b34801561014c57600080fd5b506004545b604051908152602001610115565b34801561016b57600080fd5b5061018f61017a366004610be4565b60016020526000908152604090205460ff1681565b6040519015158152602001610115565b3480156101ab57600080fd5b506101bf6101ba366004610baf565b610478565b604051610115959493929190610c53565b3480156101dc57600080fd5b5061018f6101eb366004610c8e565b600360209081526000928352604080842090915290825290205460ff1681565b34801561021757600080fd5b506101bf610226366004610baf565b610573565b34801561023757600080fd5b5061024061064c565b6040516101159190610cba565b34801561025957600080fd5b5061013e610268366004610baf565b6106ae565b34801561027957600080fd5b5061013e610288366004610d1d565b61083c565b34801561029957600080fd5b5061015160025481565b3480156102af57600080fd5b5061013e6102be366004610baf565b6109bc565b600081815481106102d357600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526001602052604090205460ff166103255760405162461bcd60e51b815260040161031c90610de7565b60405180910390fd5b600454819081106103485760405162461bcd60e51b815260040161031c90610e0a565b816004818154811061035c5761035c610e35565b600091825260209091206003600590920201015460ff16156103905760405162461bcd60e51b815260040161031c90610e4b565b6000600484815481106103a5576103a5610e35565b600091825260208083208784526003825260408085203386529092529220546005909102909101915060ff166104105760405162461bcd60e51b815260206004820152601060248201526f1d1e081b9bdd0818dbdb999a5c9b595960821b604482015260640161031c565b60018160040160008282546104259190610e8e565b90915550506000848152600360209081526040808320338085529252808320805460ff191690555186927ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5591a350505050565b600080606060008060006004878154811061049557610495610e35565b6000918252602090912060059091020180546001820154600383015460048401546002850180549596506001600160a01b039094169492939260ff9092169183906104df90610ea5565b80601f016020809104026020016040519081016040528092919081815260200182805461050b90610ea5565b80156105585780601f1061052d57610100808354040283529160200191610558565b820191906000526020600020905b81548152906001019060200180831161053b57829003601f168201915b50505050509250955095509550955095505091939590929450565b6004818154811061058357600080fd5b60009182526020909120600590910201805460018201546002830180546001600160a01b0390931694509092916105b990610ea5565b80601f01602080910402602001604051908101604052809291908181526020018280546105e590610ea5565b80156106325780601f1061060757610100808354040283529160200191610632565b820191906000526020600020905b81548152906001019060200180831161061557829003601f168201915b505050506003830154600490930154919260ff1691905085565b606060008054806020026020016040519081016040528092919081815260200182805480156106a457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610686575b5050505050905090565b3360009081526001602052604090205460ff166106dd5760405162461bcd60e51b815260040161031c90610de7565b600454819081106107005760405162461bcd60e51b815260040161031c90610e0a565b816004818154811061071457610714610e35565b600091825260209091206003600590920201015460ff16156107485760405162461bcd60e51b815260040161031c90610e4b565b6000838152600360209081526040808320338452909152902054839060ff16156107ab5760405162461bcd60e51b81526020600482015260146024820152731d1e08185b1c9958591e4818dbdb999a5c9b595960621b604482015260640161031c565b6000600485815481106107c0576107c0610e35565b9060005260206000209060050201905060018160040160008282546107e59190610edf565b90915550506000858152600360209081526040808320338085529252808320805460ff191660011790555187927f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004191a35050505050565b3360009081526001602052604090205460ff1661086b5760405162461bcd60e51b815260040161031c90610de7565b600480546040805160a0810182526001600160a01b03878116825260208201878152928201868152600060608401819052608084018190526001860187559590955281517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6005860290810180546001600160a01b0319169290931691909117825592517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c84015593519293909290917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d01906109489082610f46565b50606082015160038201805460ff19169115159190911790556080909101516004909101556040516001600160a01b03851690829033907fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d906109ae9088908890611005565b60405180910390a450505050565b3360009081526001602052604090205460ff166109eb5760405162461bcd60e51b815260040161031c90610de7565b60045481908110610a0e5760405162461bcd60e51b815260040161031c90610e0a565b8160048181548110610a2257610a22610e35565b600091825260209091206003600590920201015460ff1615610a565760405162461bcd60e51b815260040161031c90610e4b565b600060048481548110610a6b57610a6b610e35565b9060005260206000209060050201905060025481600401541015610ac55760405162461bcd60e51b81526020600482015260116024820152700c6c2dcdcdee840caf0cac6eae8ca40e8f607b1b604482015260640161031c565b60038101805460ff191660019081179091558154908201546040516000926001600160a01b03169190610afc906002860190611026565b60006040518083038185875af1925050503d8060008114610b39576040519150601f19603f3d011682016040523d82523d6000602084013e610b3e565b606091505b5050905080610b7b5760405162461bcd60e51b81526020600482015260096024820152681d1e0819985a5b195960ba1b604482015260640161031c565b604051859033907f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac90600090a35050505050565b600060208284031215610bc157600080fd5b5035919050565b80356001600160a01b0381168114610bdf57600080fd5b919050565b600060208284031215610bf657600080fd5b610bff82610bc8565b9392505050565b6000815180845260005b81811015610c2c57602081850181015186830182015201610c10565b81811115610c3e576000602083870101525b50601f01601f19169290920160200192915050565b60018060a01b038616815284602082015260a060408201526000610c7a60a0830186610c06565b931515606083015250608001529392505050565b60008060408385031215610ca157600080fd5b82359150610cb160208401610bc8565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015610cfb5783516001600160a01b031683529284019291840191600101610cd6565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610d3257600080fd5b610d3b84610bc8565b92506020840135915060408401356001600160401b0380821115610d5e57600080fd5b818601915086601f830112610d7257600080fd5b813581811115610d8457610d84610d07565b604051601f8201601f19908116603f01168101908382118183101715610dac57610dac610d07565b81604052828152896020848701011115610dc557600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b6020808252601190820152701d1e08191bd95cc81b9bdd08195e1a5cdd607a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252601390820152721d1e08185b1c9958591e48195e1958dd5d1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015610ea057610ea0610e78565b500390565b600181811c90821680610eb957607f821691505b602082108103610ed957634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610ef257610ef2610e78565b500190565b601f821115610f4157600081815260208120601f850160051c81016020861015610f1e5750805b601f850160051c820191505b81811015610f3d57828155600101610f2a565b5050505b505050565b81516001600160401b03811115610f5f57610f5f610d07565b610f7381610f6d8454610ea5565b84610ef7565b602080601f831160018114610fa85760008415610f905750858301515b600019600386901b1c1916600185901b178555610f3d565b600085815260208120601f198616915b82811015610fd757888601518255948401946001909101908401610fb8565b5085821015610ff55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b82815260406020820152600061101e6040830184610c06565b949350505050565b600080835461103481610ea5565b6001828116801561104c576001811461106157611090565b60ff1984168752821515830287019450611090565b8760005260208060002060005b858110156110875781548a82015290840190820161106e565b50505082870194505b5092969550505050505056fea26469706673582212204c8b78ff554a1ed04114b857b0442219dcdb506c6c3b96c57cdede8c7a1c0b6964736f6c634300080f0033";

type MultiSigWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSigWallet__factory extends ContractFactory {
  constructor(...args: MultiSigWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owners: PromiseOrValue<string>[],
    _numConfirmationsRequired: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiSigWallet> {
    return super.deploy(
      _owners,
      _numConfirmationsRequired,
      overrides || {}
    ) as Promise<MultiSigWallet>;
  }
  override getDeployTransaction(
    _owners: PromiseOrValue<string>[],
    _numConfirmationsRequired: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owners,
      _numConfirmationsRequired,
      overrides || {}
    );
  }
  override attach(address: string): MultiSigWallet {
    return super.attach(address) as MultiSigWallet;
  }
  override connect(signer: Signer): MultiSigWallet__factory {
    return super.connect(signer) as MultiSigWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigWalletInterface {
    return new utils.Interface(_abi) as MultiSigWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSigWallet {
    return new Contract(address, _abi, signerOrProvider) as MultiSigWallet;
  }
}
