/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TykheLuckyOracle,
  TykheLuckyOracleInterface,
} from "../../../contracts/chainlinkOracles/TykheLuckyOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_link_token_contract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "consumerAddress",
        type: "address",
      },
    ],
    name: "addConsumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "askOracle",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receivingWallet",
        type: "address",
      },
    ],
    name: "cancelSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "consumerAddress",
        type: "address",
      },
    ],
    name: "removeConsumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_requestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_subscriptionId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "topUpSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052600580546001600160501b03191666020003000186a017905534801561002957600080fd5b50604051610d38380380610d388339810160408190526100489161021d565b600280546001600160a01b0380821660805260088054600160401b600160e01b031916336801000000000000000002179055600580546001600160501b03191666010001000186a01790556001600160a01b0319918216868216908117909355600380548316918616918217905560048490556000805483169093179092556001805490911690911790556100db6100e3565b505050610289565b6008546801000000000000000090046001600160a01b0316331461010657600080fd5b60008054906101000a90046001600160a01b03166001600160a01b031663a21a23e46040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610159573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017d9190610259565b600880546001600160401b0319166001600160401b03929092169182179055600054604051631cd0704360e21b815260048101929092523060248301526001600160a01b031690637341c10c90604401600060405180830381600087803b1580156101e757600080fd5b505af11580156101fb573d6000803e3d6000fd5b50505050565b80516001600160a01b038116811461021857600080fd5b919050565b60008060006060848603121561023257600080fd5b61023b84610201565b925061024960208501610201565b9150604084015190509250925092565b60006020828403121561026b57600080fd5b81516001600160401b038116811461028257600080fd5b9392505050565b608051610a8d6102ab6000396000818161033301526103750152610a8d6000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8062f714ce146100a85780630e27e3df146100bd578063112940f9146100d05780631fe543e3146100e357806386850e93146100f65780638ac000211461010957806393d81d5814610132578063e0c8628914610145578063e89e106a1461014d578063ed6f079214610164578063f2fde38b14610179578063f6eaffc81461018c575b600080fd5b6100bb6100b63660046107f0565b61019f565b005b6100bb6100cb36600461081c565b610239565b6100bb6100de36600461081c565b6102cb565b6100bb6100f1366004610854565b610328565b6100bb61010436600461091d565b6103b5565b60085461011c906001600160401b031681565b6040516101299190610936565b60405180910390f35b6100bb61014036600461081c565b61047b565b6100bb61051d565b61015660075481565b604051908152602001610129565b61016c6105f2565b604051610129919061094a565b6100bb61018736600461081c565b61064a565b61015661019a36600461091d565b61072b565b600854600160401b90046001600160a01b031633146101bd57600080fd5b60015460405163a9059cbb60e01b81526001600160a01b038381166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af1158015610210573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610234919061098e565b505050565b600854600160401b90046001600160a01b0316331461025757600080fd5b600054600854604051639f87fad760e01b81526001600160a01b0390921691639f87fad791610296916001600160401b039091169085906004016109b0565b600060405180830381600087803b1580156102b057600080fd5b505af11580156102c4573d6000803e3d6000fd5b5050505050565b600854600160401b90046001600160a01b031633146102e957600080fd5b600054600854604051631cd0704360e21b81526001600160a01b0390921691637341c10c91610296916001600160401b039091169085906004016109b0565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103a75760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b6103b1828261074c565b5050565b600854600160401b90046001600160a01b031633146103d357600080fd5b6001546000546008546040516001600160a01b0393841693634000aea0931691859161040b916001600160401b031690602001610936565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610438939291906109d2565b6020604051808303816000875af1158015610457573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b1919061098e565b600854600160401b90046001600160a01b0316331461049957600080fd5b600054600854604051630d7ae1d360e41b81526001600160a01b039092169163d7ae1d30916104d8916001600160401b039091169085906004016109b0565b600060405180830381600087803b1580156104f257600080fd5b505af1158015610506573d6000803e3d6000fd5b5050600880546001600160401b0319169055505050565b600854600160401b90046001600160a01b0316331461053b57600080fd5b600054600480546008546005546040516305d3b1d360e41b8152938401929092526001600160401b03166024830152600160201b810461ffff16604483015263ffffffff8082166064840152600160301b9091041660848201526001600160a01b0390911690635d3b1d309060a4016020604051808303816000875af11580156105c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ed9190610a3e565b600755565b6060600680548060200260200160405190810160405280929190818152602001828054801561064057602002820191906000526020600020905b81548152602001906001019080831161062c575b5050505050905090565b600854600160401b90046001600160a01b0316331461066857600080fd5b6001600160a01b0381166106cd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161039e565b600880546001600160a01b03838116600160401b818102600160401b600160e01b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6006818154811061073b57600080fd5b600091825260209091200154905081565b8051600680548282556000829052610234927ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f918201916020860182156107af579160200282015b828111156107af578251825591602001919060010190610794565b506107bb9291506107bf565b5090565b5b808211156107bb57600081556001016107c0565b80356001600160a01b03811681146107eb57600080fd5b919050565b6000806040838503121561080357600080fd5b82359150610813602084016107d4565b90509250929050565b60006020828403121561082e57600080fd5b610837826107d4565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561086757600080fd5b823591506020808401356001600160401b038082111561088657600080fd5b818601915086601f83011261089a57600080fd5b8135818111156108ac576108ac61083e565b8060051b604051601f19603f830116810181811085821117156108d1576108d161083e565b6040529182528482019250838101850191898311156108ef57600080fd5b938501935b8285101561090d578435845293850193928501926108f4565b8096505050505050509250929050565b60006020828403121561092f57600080fd5b5035919050565b6001600160401b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b8181101561098257835183529284019291840191600101610966565b50909695505050505050565b6000602082840312156109a057600080fd5b8151801515811461083757600080fd5b6001600160401b039290921682526001600160a01b0316602082015260400190565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b81811015610a14578581018301518582016080015282016109f8565b81811115610a26576000608083870101525b50601f01601f19169290920160800195945050505050565b600060208284031215610a5057600080fd5b505191905056fea2646970667358221220b6d303a9fb18b687c0f169cd0917549e54a4becc567306d5b380930d6e4a37e264736f6c634300080f0033";

type TykheLuckyOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TykheLuckyOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TykheLuckyOracle__factory extends ContractFactory {
  constructor(...args: TykheLuckyOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vrfCoordinator: PromiseOrValue<string>,
    _link_token_contract: PromiseOrValue<string>,
    _keyHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TykheLuckyOracle> {
    return super.deploy(
      _vrfCoordinator,
      _link_token_contract,
      _keyHash,
      overrides || {}
    ) as Promise<TykheLuckyOracle>;
  }
  override getDeployTransaction(
    _vrfCoordinator: PromiseOrValue<string>,
    _link_token_contract: PromiseOrValue<string>,
    _keyHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _link_token_contract,
      _keyHash,
      overrides || {}
    );
  }
  override attach(address: string): TykheLuckyOracle {
    return super.attach(address) as TykheLuckyOracle;
  }
  override connect(signer: Signer): TykheLuckyOracle__factory {
    return super.connect(signer) as TykheLuckyOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TykheLuckyOracleInterface {
    return new utils.Interface(_abi) as TykheLuckyOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TykheLuckyOracle {
    return new Contract(address, _abi, signerOrProvider) as TykheLuckyOracle;
  }
}
