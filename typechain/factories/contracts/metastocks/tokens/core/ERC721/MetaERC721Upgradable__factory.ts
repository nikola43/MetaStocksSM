/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  MetaERC721Upgradable,
  MetaERC721UpgradableInterface,
} from "../../../../../../contracts/metastocks/tokens/core/ERC721/MetaERC721Upgradable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611f12806100ed6000396000f3fe608060405234801561001057600080fd5b50600436106101335760003560e01c806301ffc9a71461013857806306fdde0314610160578063081812fc14610175578063095ea7b31461019557806318160ddd146101aa57806323b872dd146101bc5780632f745c59146101cf5780633f4ba83a146101e257806340d097c3146101ea57806342842e0e146101fd57806342966c68146102105780634f6ccce7146102235780635c975abb146102365780636352211e1461024157806370a0823114610254578063715018a6146102675780638129fc1c1461026f5780638456cb59146102775780638da5cb5b1461027f57806395d89b4114610287578063a22cb4651461028f578063b88d4fde146102a2578063c87b56dd146102b5578063e985e9c5146102c8578063f2fde38b146102db575b600080fd5b61014b610146366004611855565b6102ee565b60405190151581526020015b60405180910390f35b6101686102ff565b60405161015791906118ca565b6101886101833660046118dd565b610391565b60405161015791906118f6565b6101a86101a3366004611926565b6103b8565b005b6099545b604051908152602001610157565b6101a86101ca366004611950565b6104d2565b6101ae6101dd366004611926565b610504565b6101a861059a565b6101a86101f836600461198c565b6105ac565b6101a861020b366004611950565b6105df565b6101a861021e3660046118dd565b6105fa565b6101ae6102313660046118dd565b61062b565b60c95460ff1661014b565b61018861024f3660046118dd565b6106be565b6101ae61026236600461198c565b6106f3565b6101a8610779565b6101a861078b565b6101a86108fe565b61018861090e565b61016861091d565b6101a861029d3660046119a7565b61092c565b6101a86102b03660046119f9565b610937565b6101686102c33660046118dd565b61096f565b61014b6102d6366004611ad4565b6109e3565b6101a86102e936600461198c565b610a11565b60006102f982610a87565b92915050565b60606065805461030e90611b07565b80601f016020809104026020016040519081016040528092919081815260200182805461033a90611b07565b80156103875780601f1061035c57610100808354040283529160200191610387565b820191906000526020600020905b81548152906001019060200180831161036a57829003601f168201915b5050505050905090565b600061039c82610aac565b506000908152606960205260409020546001600160a01b031690565b60006103c3826106be565b9050806001600160a01b0316836001600160a01b0316036104355760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610451575061045181336109e3565b6104c35760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161042c565b6104cd8383610ad1565b505050565b6104dd335b82610b3f565b6104f95760405162461bcd60e51b815260040161042c90611b41565b6104cd838383610b9e565b600061050f836106f3565b82106105715760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161042c565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b6105a2610d33565b6105aa610d92565b565b6105b4610d33565b60006105c061015f5490565b90506105d161015f80546001019055565b6105db8282610dde565b5050565b6104cd83838360405180602001604052806000815250610937565b610603336104d7565b61061f5760405162461bcd60e51b815260040161042c90611b41565b61062881610df8565b50565b600061063660995490565b82106106995760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161042c565b609982815481106106ac576106ac611b8f565b90600052602060002001549050919050565b6000818152606760205260408120546001600160a01b0316806102f95760405162461bcd60e51b815260040161042c90611ba5565b60006001600160a01b03821661075d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161042c565b506001600160a01b031660009081526068602052604090205490565b610781610d33565b6105aa6000610e8d565b600054610100900460ff16158080156107ab5750600054600160ff909116105b806107cc57506107ba30610edf565b1580156107cc575060005460ff166001145b61082f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161042c565b6000805460ff191660011790558015610852576000805461ff0019166101001790555b6108966040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b815250610eee565b61089e610f1f565b6108a6610f46565b6108ae610f75565b6108b6610f1f565b8015610628576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b610906610d33565b6105aa610fa4565b60fb546001600160a01b031690565b60606066805461030e90611b07565b6105db338383610fe1565b6109413383610b3f565b61095d5760405162461bcd60e51b815260040161042c90611b41565b610969848484846110ab565b50505050565b606061097a82610aac565b600061099160408051602081019091526000815290565b905060008151116109b157604051806020016040528060008152506109dc565b806109bb846110de565b6040516020016109cc929190611bd7565b6040516020818303038152906040525b9392505050565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b610a19610d33565b6001600160a01b038116610a7e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042c565b61062881610e8d565b60006001600160e01b0319821663780e9d6360e01b14806102f957506102f9826111de565b610ab58161122e565b6106285760405162461bcd60e51b815260040161042c90611ba5565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b06826106be565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b4b836106be565b9050806001600160a01b0316846001600160a01b03161480610b725750610b7281856109e3565b80610b965750836001600160a01b0316610b8b84610391565b6001600160a01b0316145b949350505050565b826001600160a01b0316610bb1826106be565b6001600160a01b031614610c155760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161042c565b6001600160a01b038216610c775760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161042c565b610c8283838361124b565b610c8d600082610ad1565b6001600160a01b0383166000908152606860205260408120805460019290610cb6908490611c1c565b90915550506001600160a01b0382166000908152606860205260408120805460019290610ce4908490611c33565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b038681169182179092559151849391871691600080516020611ebd83398151915291a4505050565b33610d3c61090e565b6001600160a01b0316146105aa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042c565b610d9a61125e565b60c9805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610dd491906118f6565b60405180910390a1565b6105db8282604051806020016040528060008152506112a7565b6000610e03826106be565b9050610e118160008461124b565b610e1c600083610ad1565b6001600160a01b0381166000908152606860205260408120805460019290610e45908490611c1c565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b03841690600080516020611ebd833981519152908390a45050565b60fb80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03163b151590565b600054610100900460ff16610f155760405162461bcd60e51b815260040161042c90611c4b565b6105db82826112da565b600054610100900460ff166105aa5760405162461bcd60e51b815260040161042c90611c4b565b600054610100900460ff16610f6d5760405162461bcd60e51b815260040161042c90611c4b565b6105aa61131a565b600054610100900460ff16610f9c5760405162461bcd60e51b815260040161042c90611c4b565b6105aa61134d565b610fac61137d565b60c9805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610dc73390565b816001600160a01b0316836001600160a01b03160361103e5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161042c565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6110b6848484610b9e565b6110c2848484846113c3565b6109695760405162461bcd60e51b815260040161042c90611c96565b6060816000036111055750506040805180820190915260018152600360fc1b602082015290565b8160005b811561112f578061111981611ce8565b91506111289050600a83611d17565b9150611109565b6000816001600160401b03811115611149576111496119e3565b6040519080825280601f01601f191660200182016040528015611173576020820181803683370190505b5090505b8415610b9657611188600183611c1c565b9150611195600a86611d2b565b6111a0906030611c33565b60f81b8183815181106111b5576111b5611b8f565b60200101906001600160f81b031916908160001a9053506111d7600a86611d17565b9450611177565b60006001600160e01b031982166380ac58cd60e01b148061120f57506001600160e01b03198216635b5e139f60e01b145b806102f957506301ffc9a760e01b6001600160e01b03198316146102f9565b6000908152606760205260409020546001600160a01b0316151590565b61125361137d565b6104cd8383836114cb565b60c95460ff166105aa5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161042c565b6112b18383611583565b6112be60008484846113c3565b6104cd5760405162461bcd60e51b815260040161042c90611c96565b600054610100900460ff166113015760405162461bcd60e51b815260040161042c90611c4b565b606561130d8382611d8d565b5060666104cd8282611d8d565b600054610100900460ff166113415760405162461bcd60e51b815260040161042c90611c4b565b60c9805460ff19169055565b600054610100900460ff166113745760405162461bcd60e51b815260040161042c90611c4b565b6105aa33610e8d565b60c95460ff16156105aa5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161042c565b60006113d7846001600160a01b0316610edf565b156114c057604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061140e903390899088908890600401611e4c565b6020604051808303816000875af1925050508015611449575060408051601f3d908101601f1916820190925261144691810190611e89565b60015b6114a6573d808015611477576040519150601f19603f3d011682016040523d82523d6000602084013e61147c565b606091505b50805160000361149e5760405162461bcd60e51b815260040161042c90611c96565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b96565b506001949350505050565b6001600160a01b0383166115265761152181609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b611549565b816001600160a01b0316836001600160a01b0316146115495761154983826116af565b6001600160a01b038216611560576104cd8161174c565b826001600160a01b0316826001600160a01b0316146104cd576104cd82826117fb565b6001600160a01b0382166115d95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161042c565b6115e28161122e565b1561162e5760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b604482015260640161042c565b61163a6000838361124b565b6001600160a01b0382166000908152606860205260408120805460019290611663908490611c33565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051839290600080516020611ebd833981519152908290a45050565b600060016116bc846106f3565b6116c69190611c1c565b600083815260986020526040902054909150808214611719576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b60995460009061175e90600190611c1c565b6000838152609a60205260408120546099805493945090928490811061178657611786611b8f565b9060005260206000200154905080609983815481106117a7576117a7611b8f565b6000918252602080832090910192909255828152609a909152604080822084905585825281205560998054806117df576117df611ea6565b6001900381819060005260206000200160009055905550505050565b6000611806836106f3565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b6001600160e01b03198116811461062857600080fd5b60006020828403121561186757600080fd5b81356109dc8161183f565b60005b8381101561188d578181015183820152602001611875565b838111156109695750506000910152565b600081518084526118b6816020860160208601611872565b601f01601f19169290920160200192915050565b6020815260006109dc602083018461189e565b6000602082840312156118ef57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b80356001600160a01b038116811461192157600080fd5b919050565b6000806040838503121561193957600080fd5b6119428361190a565b946020939093013593505050565b60008060006060848603121561196557600080fd5b61196e8461190a565b925061197c6020850161190a565b9150604084013590509250925092565b60006020828403121561199e57600080fd5b6109dc8261190a565b600080604083850312156119ba57600080fd5b6119c38361190a565b9150602083013580151581146119d857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611a0f57600080fd5b611a188561190a565b9350611a266020860161190a565b92506040850135915060608501356001600160401b0380821115611a4957600080fd5b818701915087601f830112611a5d57600080fd5b813581811115611a6f57611a6f6119e3565b604051601f8201601f19908116603f01168101908382118183101715611a9757611a976119e3565b816040528281528a6020848701011115611ab057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611ae757600080fd5b611af08361190a565b9150611afe6020840161190a565b90509250929050565b600181811c90821680611b1b57607f821691505b602082108103611b3b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b60008351611be9818460208801611872565b835190830190611bfd818360208801611872565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611c2e57611c2e611c06565b500390565b60008219821115611c4657611c46611c06565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611cfa57611cfa611c06565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611d2657611d26611d01565b500490565b600082611d3a57611d3a611d01565b500690565b601f8211156104cd57600081815260208120601f850160051c81016020861015611d665750805b601f850160051c820191505b81811015611d8557828155600101611d72565b505050505050565b81516001600160401b03811115611da657611da66119e3565b611dba81611db48454611b07565b84611d3f565b602080601f831160018114611def5760008415611dd75750858301515b600019600386901b1c1916600185901b178555611d85565b600085815260208120601f198616915b82811015611e1e57888601518255948401946001909101908401611dff565b5085821015611e3c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e7f9083018461189e565b9695505050505050565b600060208284031215611e9b57600080fd5b81516109dc8161183f565b634e487b7160e01b600052603160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220f4ccaa1c5f813215ddbe16024209d65882e741cac54a0cd3fabfd6b43b2ae3f864736f6c634300080f0033";

type MetaERC721UpgradableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetaERC721UpgradableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetaERC721Upgradable__factory extends ContractFactory {
  constructor(...args: MetaERC721UpgradableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MetaERC721Upgradable> {
    return super.deploy(overrides || {}) as Promise<MetaERC721Upgradable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MetaERC721Upgradable {
    return super.attach(address) as MetaERC721Upgradable;
  }
  override connect(signer: Signer): MetaERC721Upgradable__factory {
    return super.connect(signer) as MetaERC721Upgradable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaERC721UpgradableInterface {
    return new utils.Interface(_abi) as MetaERC721UpgradableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaERC721Upgradable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MetaERC721Upgradable;
  }
}
