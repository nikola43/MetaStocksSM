/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MetaCompany,
  MetaCompanyInterface,
} from "../../../../../contracts/metastocks/tokens/stock/MetaCompany";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6119ed806100ed6000396000f3fe608060405234801561001057600080fd5b50600436106101075760003560e01c806301ffc9a71461010c57806306fdde0314610134578063081812fc14610149578063095ea7b31461016957806323b872dd1461017e5780633f4ba83a1461019157806340d097c31461019957806342842e0e146101ba5780635c975abb146101cd5780636352211e146101d857806370a08231146101eb578063715018a6146101fe5780638129fc1c146102065780638456cb591461020e5780638da5cb5b1461021657806395d89b411461021e578063a22cb46514610226578063b88d4fde14610239578063c87b56dd1461024c578063e985e9c51461025f578063f2fde38b14610272575b600080fd5b61011f61011a36600461134b565b610285565b60405190151581526020015b60405180910390f35b61013c6102d7565b60405161012b91906113c0565b61015c6101573660046113d3565b610369565b60405161012b91906113ec565b61017c610177366004611417565b610390565b005b61017c61018c366004611441565b6104aa565b61017c6104db565b6101ac6101a736600461147d565b6104ed565b60405190815260200161012b565b61017c6101c8366004611441565b610524565b60975460ff1661011f565b61015c6101e63660046113d3565b61053f565b6101ac6101f936600461147d565b610574565b61017c6105fa565b61017c61060c565b61017c610774565b61015c610784565b61013c610793565b61017c610234366004611498565b6107a2565b61017c6102473660046114ea565b6107b1565b61013c61025a3660046113d3565b6107e9565b61011f61026d3660046115c5565b61085d565b61017c61028036600461147d565b61088b565b60006001600160e01b031982166380ac58cd60e01b14806102b657506001600160e01b03198216635b5e139f60e01b145b806102d157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546102e6906115f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610312906115f8565b801561035f5780601f106103345761010080835404028352916020019161035f565b820191906000526020600020905b81548152906001019060200180831161034257829003601f168201915b5050505050905090565b600061037482610901565b506000908152606960205260409020546001600160a01b031690565b600061039b8261053f565b9050806001600160a01b0316836001600160a01b03160361040d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104295750610429813361085d565b61049b5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610404565b6104a58383610926565b505050565b6104b43382610994565b6104d05760405162461bcd60e51b815260040161040490611632565b6104a58383836109f3565b6104e3610b88565b6104eb610be7565b565b60006104f7610b88565b600061050260fb5490565b905061051260fb80546001019055565b61051c8382610c33565b90505b919050565b6104a5838383604051806020016040528060008152506107b1565b6000818152606760205260408120546001600160a01b03168061051c5760405162461bcd60e51b815260040161040490611680565b60006001600160a01b0382166105de5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610404565b506001600160a01b031660009081526068602052604090205490565b610602610b88565b6104eb6000610c4d565b600054610100900460ff161580801561062c5750600054600160ff909116105b8061064d575061063b30610c9f565b15801561064d575060005460ff166001145b6106b05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610404565b6000805460ff1916600117905580156106d3576000805461ff0019166101001790555b61071b6040518060400160405280600b81526020016a4d657461436f6d70616e7960a81b815250604051806040016040528060038152602001624d534360e81b815250610cae565b610723610cdf565b61072b610d0e565b8015610771576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b61077c610b88565b6104eb610d3d565b60c9546001600160a01b031690565b6060606680546102e6906115f8565b6107ad338383610d7a565b5050565b6107bb3383610994565b6107d75760405162461bcd60e51b815260040161040490611632565b6107e384848484610e44565b50505050565b60606107f482610901565b600061080b60408051602081019091526000815290565b9050600081511161082b5760405180602001604052806000815250610856565b8061083584610e77565b6040516020016108469291906116b2565b6040516020818303038152906040525b9392505050565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b610893610b88565b6001600160a01b0381166108f85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610404565b61077181610c4d565b61090a81610f77565b6107715760405162461bcd60e51b815260040161040490611680565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061095b8261053f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806109a08361053f565b9050806001600160a01b0316846001600160a01b031614806109c757506109c7818561085d565b806109eb5750836001600160a01b03166109e084610369565b6001600160a01b0316145b949350505050565b826001600160a01b0316610a068261053f565b6001600160a01b031614610a6a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610404565b6001600160a01b038216610acc5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610404565b610ad7838383610f94565b610ae2600082610926565b6001600160a01b0383166000908152606860205260408120805460019290610b0b9084906116f7565b90915550506001600160a01b0382166000908152606860205260408120805460019290610b3990849061170e565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061199883398151915291a4505050565b33610b91610784565b6001600160a01b0316146104eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610404565b610bef610f9c565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610c2991906113ec565b60405180910390a1565b6107ad828260405180602001604052806000815250610fe5565b60c980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03163b151590565b600054610100900460ff16610cd55760405162461bcd60e51b815260040161040490611726565b6107ad8282611018565b600054610100900460ff16610d065760405162461bcd60e51b815260040161040490611726565b6104eb611058565b600054610100900460ff16610d355760405162461bcd60e51b815260040161040490611726565b6104eb61108b565b610d456110bb565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c1c3390565b816001600160a01b0316836001600160a01b031603610dd75760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610404565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e4f8484846109f3565b610e5b84848484611101565b6107e35760405162461bcd60e51b815260040161040490611771565b606081600003610e9e5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610ec85780610eb2816117c3565b9150610ec19050600a836117f2565b9150610ea2565b6000816001600160401b03811115610ee257610ee26114d4565b6040519080825280601f01601f191660200182016040528015610f0c576020820181803683370190505b5090505b84156109eb57610f216001836116f7565b9150610f2e600a86611806565b610f3990603061170e565b60f81b818381518110610f4e57610f4e61181a565b60200101906001600160f81b031916908160001a905350610f70600a866117f2565b9450610f10565b6000908152606760205260409020546001600160a01b0316151590565b6104a56110bb565b60975460ff166104eb5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610404565b610fef8383611209565b610ffc6000848484611101565b6104a55760405162461bcd60e51b815260040161040490611771565b600054610100900460ff1661103f5760405162461bcd60e51b815260040161040490611726565b606561104b838261187e565b5060666104a5828261187e565b600054610100900460ff1661107f5760405162461bcd60e51b815260040161040490611726565b6097805460ff19169055565b600054610100900460ff166110b25760405162461bcd60e51b815260040161040490611726565b6104eb33610c4d565b60975460ff16156104eb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610404565b6000611115846001600160a01b0316610c9f565b156111fe57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061114c90339089908890889060040161193d565b6020604051808303816000875af1925050508015611187575060408051601f3d908101601f191682019092526111849181019061197a565b60015b6111e4573d8080156111b5576040519150601f19603f3d011682016040523d82523d6000602084013e6111ba565b606091505b5080516000036111dc5760405162461bcd60e51b815260040161040490611771565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109eb565b506001949350505050565b6001600160a01b03821661125f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610404565b61126881610f77565b156112b45760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606401610404565b6112c060008383610f94565b6001600160a01b03821660009081526068602052604081208054600192906112e990849061170e565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051839290600080516020611998833981519152908290a45050565b6001600160e01b03198116811461077157600080fd5b60006020828403121561135d57600080fd5b813561085681611335565b60005b8381101561138357818101518382015260200161136b565b838111156107e35750506000910152565b600081518084526113ac816020860160208601611368565b601f01601f19169290920160200192915050565b6020815260006108566020830184611394565b6000602082840312156113e557600080fd5b5035919050565b6001600160a01b0391909116815260200190565b80356001600160a01b038116811461051f57600080fd5b6000806040838503121561142a57600080fd5b61143383611400565b946020939093013593505050565b60008060006060848603121561145657600080fd5b61145f84611400565b925061146d60208501611400565b9150604084013590509250925092565b60006020828403121561148f57600080fd5b61085682611400565b600080604083850312156114ab57600080fd5b6114b483611400565b9150602083013580151581146114c957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561150057600080fd5b61150985611400565b935061151760208601611400565b92506040850135915060608501356001600160401b038082111561153a57600080fd5b818701915087601f83011261154e57600080fd5b813581811115611560576115606114d4565b604051601f8201601f19908116603f01168101908382118183101715611588576115886114d4565b816040528281528a60208487010111156115a157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156115d857600080fd5b6115e183611400565b91506115ef60208401611400565b90509250929050565b600181811c9082168061160c57607f821691505b60208210810361162c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b600083516116c4818460208801611368565b8351908301906116d8818360208801611368565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611709576117096116e1565b500390565b60008219821115611721576117216116e1565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600182016117d5576117d56116e1565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611801576118016117dc565b500490565b600082611815576118156117dc565b500690565b634e487b7160e01b600052603260045260246000fd5b601f8211156104a557600081815260208120601f850160051c810160208610156118575750805b601f850160051c820191505b8181101561187657828155600101611863565b505050505050565b81516001600160401b03811115611897576118976114d4565b6118ab816118a584546115f8565b84611830565b602080601f8311600181146118e057600084156118c85750858301515b600019600386901b1c1916600185901b178555611876565b600085815260208120601f198616915b8281101561190f578886015182559484019460019091019084016118f0565b508582101561192d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061197090830184611394565b9695505050505050565b60006020828403121561198c57600080fd5b81516108568161133556feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212203daac62ad87e822774ac989eb1f812de2a2b31fb2f5fa16b76762977401897ac64736f6c634300080f0033";

type MetaCompanyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetaCompanyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetaCompany__factory extends ContractFactory {
  constructor(...args: MetaCompanyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MetaCompany> {
    return super.deploy(overrides || {}) as Promise<MetaCompany>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MetaCompany {
    return super.attach(address) as MetaCompany;
  }
  override connect(signer: Signer): MetaCompany__factory {
    return super.connect(signer) as MetaCompany__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaCompanyInterface {
    return new utils.Interface(_abi) as MetaCompanyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaCompany {
    return new Contract(address, _abi, signerOrProvider) as MetaCompany;
  }
}
