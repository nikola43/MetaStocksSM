/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MidasGoldOracle,
  MidasGoldOracleInterface,
} from "../../../../contracts/midas/MidasGoldRouter.sol/MidasGoldOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_managers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "availableChainlinkNet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creationTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "add1",
        type: "address",
      },
      {
        internalType: "address",
        name: "add2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "estimatedTokensForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDexRouter",
    outputs: [
      {
        internalType: "contract IMidasMultinetworkRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDexRouterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKimdomTokenPriceOracle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "network",
        type: "string",
      },
    ],
    name: "getMinimunTokenAmout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNativeNetworkCurrencyPriceInUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_networkId",
        type: "uint256",
      },
    ],
    name: "getNativeTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "network",
        type: "string",
      },
    ],
    name: "getRequiredEthAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_networkId",
        type: "uint256",
      },
    ],
    name: "getStableCoinAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "getTokensValueInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "goldOracleAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "kindomTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_midasMultinetworkRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stableCoinAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_networkId",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInSwap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "isPayingWithNativeCurrency",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "self",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_midasMultinetworkRouterAddress",
        type: "address",
      },
    ],
    name: "setDexRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "kindomTokenAddress",
        type: "address",
      },
    ],
    name: "setOracles",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "swapTokensForNativeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "swapTokensForStableCoin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061179a806100206000396000f3fe608060405234801561001057600080fd5b506004361061011d5760003560e01c8063197e8da91461012257806330a9e488146101525780633c9357761461017357806353cb986d1461018657806365a20a81146101c45780637104ddb2146101d75780637f9b20de146101dd57806385954d8c146101e65780638da5cb5b146101f7578063b6215c411461020a578063b8b03b2214610212578063b9c55241146101e6578063cc99689914610227578063cf6c62ea14610239578063d5d31abe1461024c578063dd6e491e1461026f578063ddf7c0171461020a578063e3f53d4214610282578063ebe5568814610295578063f7013ef6146102a8578063f72f863b146102bb578063f7a76576146102eb578063fafcedce146102fe575b600080fd5b6101356101303660046111b6565b610311565b6040516001600160a01b0390911681526020015b60405180910390f35b61016561016036600461129c565b6103b8565b604051908152602001610149565b6101656101813660046112eb565b61043c565b6101b46101943660046112eb565b805160208183018101805160038252928201919093012091525460ff1681565b6040519015158152602001610149565b6101656101d2366004611327565b61058d565b30610135565b61016560055481565b6002546001600160a01b0316610135565b600754610135906001600160a01b031681565b610165610699565b610225610220366004611327565b6106b6565b005b600854600160a01b900460ff166101b4565b610225610247366004611368565b6108b8565b6101b461025a3660046113ae565b60046020526000908152604090205460ff1681565b61013561027d3660046111b6565b6109f1565b6102256102903660046113ae565b610b02565b6101b46102a33660046113ae565b610b41565b6102256102b63660046113cb565b610bca565b6102256102c93660046113ae565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6102256102f9366004611327565b610d23565b61016561030c36600461142f565b610ead565b600073ae13d989dac2f0debff460ac112a837c89baa7cd606183900361034c575073ae13d989dac2f0debff460ac112a837c89baa7cd6103b2565b8260610361036f575073ae13d989dac2f0debff460ac112a837c89baa7cd6103b2565b60405162461bcd60e51b8152602060048201526013602482015272756e737570706f72746564206e6574776f726b60681b60448201526064015b60405180910390fd5b92915050565b60025460405163197e8da960e01b8152606160048201526000916104359185916001600160a01b03169063197e8da990602401602060405180830381865afa158015610408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042c919061145b565b6101d28561043c565b9392505050565b60008060038360405161044f9190611478565b9081526040519081900360200190205460ff16156104e557600260009054906101000a90046001600160a01b03166001600160a01b031663ddf7c0176040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104de91906114b3565b9050610571565b60025460405163197e8da960e01b81526061600482015261056e916001600160a01b03169063197e8da990602401602060405180830381865afa158015610530573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610554919061145b565b6008546001600160a01b0316670de0b6b3a764000061058d565b90505b8060055461057f91906114e2565b610435906305f5e100611504565b60025460408051632165536360e21b815290516000926001600160a01b0316916385954d8c9160048083019260209291908290030181865afa1580156105d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fb919061145b565b6001600160a01b031663d06ca61f8361061487876110b8565b6040518363ffffffff1660e01b8152600401610631929190611567565b600060405180830381865afa15801561064e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106769190810190611580565b60018151811061068857610688611625565b602002602001015190509392505050565b6001546000906106b1906001600160a01b0316611145565b905090565b604080516003808252608082019092526000916020820160608036833701905050905083816000815181106106ed576106ed611625565b6001600160a01b039092166020928302919091019091015260095460405163197e8da960e01b8152309163197e8da99161072e919060040190815260200190565b602060405180830381865afa15801561074b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076f919061145b565b8160018151811061078257610782611625565b6001600160a01b0392831660209182029290920101526008548251911690829060029081106107b3576107b3611625565b6001600160a01b03928316602091820292909201015260085460025460405163095ea7b360e01b81529183169263095ea7b3926107fa92909116906000199060040161163b565b6020604051808303816000875af1158015610819573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083d9190611654565b506002546001600160a01b0316635c11d7958360008487610860426103e8611676565b6040518663ffffffff1660e01b815260040161088095949392919061168e565b600060405180830381600087803b15801561089a57600080fd5b505af11580156108ae573d6000803e3d6000fd5b5050505050505050565b60025460405163095ea7b360e01b81526001600160a01b038681169263095ea7b3926108ee92909116906000199060040161163b565b6020604051808303816000875af115801561090d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109319190611654565b506002546001600160a01b031663f305d7198230856000808961095642612710611676565b60405160e089901b6001600160e01b03191681526001600160a01b039687166004820152602481019590955260448501939093526064840191909152909216608482015260a481019190915260c40160606040518083038185885af11580156109c3573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109e891906116ca565b50505050505050565b60007378867bbeef44f2326bf8ddd1941a4439382ef2a76061839003610a2c57507378867bbeef44f2326bf8ddd1941a4439382ef2a76103b2565b82603803610a4f575073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c6103b2565b8261a86903610a73575073d00ae08403b9bbb9124bb305c09058e32c39a48c6103b2565b8261a86a03610a97575073b31f66aa3c1e785363f0875a1b74e27b85fd66c76103b2565b82610fa203610abb575073f1277d1ed8ad466beddf92ef448a1326619566216103b2565b8260fa03610ade57507321be370d5312f44cb42ce377bc9b8a0cef1a4c836103b2565b826201388103610af157506110106103b2565b8260890361036f57506110106103b2565b6000546201000090046001600160a01b03163314610b1f57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60025460405163197e8da960e01b8152606160048201526000916001600160a01b03169063197e8da990602401602060405180830381865afa158015610b8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baf919061145b565b6001600160a01b0316826001600160a01b0316149050919050565b600054610100900460ff1615808015610bea5750600054600160ff909116105b80610c045750303b158015610c04575060005460ff166001145b610c675760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103a9565b6000805460ff191660011790558015610c8a576000805461ff0019166101001790555b60078054336001600160a01b0319918216179091556001805482166001600160a01b03888116919091179091556002805483168783161790556009849055600880549092169085161790558015610d1b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6040805160028082526060820183526000926020830190803683370190505090508381600081518110610d5857610d58611625565b6001600160a01b039092166020928302919091019091015260095460405163197e8da960e01b8152309163197e8da991610d99919060040190815260200190565b602060405180830381865afa158015610db6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dda919061145b565b81600181518110610ded57610ded611625565b6001600160a01b03928316602091820292909201015260025460405163095ea7b360e01b81528683169263095ea7b392610e30929116906000199060040161163b565b6020604051808303816000875af1158015610e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e739190611654565b5060025460405163791ac94760e01b81526001600160a01b039091169063791ac9479061088090859060009086908990429060040161168e565b6001546000908190610ec7906001600160a01b0316611145565b610ed6906402540be400611504565b6040805160038082526080820190925291925060009190602082016060803683370190505090508481600081518110610f1157610f11611625565b6001600160a01b039092166020928302919091019091015260095460405163197e8da960e01b8152309163197e8da991610f52919060040190815260200190565b602060405180830381865afa158015610f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f93919061145b565b81600181518110610fa657610fa6611625565b60200260200101906001600160a01b031690816001600160a01b031681525050610fd16009546109f1565b81600281518110610fe457610fe4611625565b6001600160a01b03928316602091820292909201015260025460405163d06ca61f60e01b8152600092919091169063d06ca61f906110289088908690600401611567565b600060405180830381865afa158015611045573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261106d9190810190611580565b905060008160018151811061108457611084611625565b60200260200101519050670de0b6b3a764000081856110a39190611504565b6110ad91906114e2565b979650505050505050565b6040805160028082526060808301845292600092919060208301908036833701905050905083816000815181106110f1576110f1611625565b60200260200101906001600160a01b031690816001600160a01b031681525050828160018151811061112557611125611625565b6001600160a01b0390921660209283029190910190910152905092915050565b600080826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111aa9190611714565b50919695505050505050565b6000602082840312156111c857600080fd5b5035919050565b6001600160a01b03811681146111e457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611225576112256111e7565b604052919050565b600082601f83011261123e57600080fd5b81356001600160401b03811115611257576112576111e7565b61126a601f8201601f19166020016111fd565b81815284602083860101111561127f57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156112af57600080fd5b82356112ba816111cf565b915060208301356001600160401b038111156112d557600080fd5b6112e18582860161122d565b9150509250929050565b6000602082840312156112fd57600080fd5b81356001600160401b0381111561131357600080fd5b61131f8482850161122d565b949350505050565b60008060006060848603121561133c57600080fd5b8335611347816111cf565b92506020840135611357816111cf565b929592945050506040919091013590565b6000806000806080858703121561137e57600080fd5b8435611389816111cf565b93506020850135611399816111cf565b93969395505050506040820135916060013590565b6000602082840312156113c057600080fd5b8135610435816111cf565b600080600080600060a086880312156113e357600080fd5b85356113ee816111cf565b945060208601356113fe816111cf565b9350604086013561140e816111cf565b9250606086013561141e816111cf565b949793965091946080013592915050565b6000806040838503121561144257600080fd5b823561144d816111cf565b946020939093013593505050565b60006020828403121561146d57600080fd5b8151610435816111cf565b6000825160005b81811015611499576020818601810151858301520161147f565b818111156114a8576000828501525b509190910192915050565b6000602082840312156114c557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000826114ff57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561151e5761151e6114cc565b500290565b600081518084526020808501945080840160005b8381101561155c5781516001600160a01b031687529582019590820190600101611537565b509495945050505050565b82815260406020820152600061131f6040830184611523565b6000602080838503121561159357600080fd5b82516001600160401b03808211156115aa57600080fd5b818501915085601f8301126115be57600080fd5b8151818111156115d0576115d06111e7565b8060051b91506115e18483016111fd565b81815291830184019184810190888411156115fb57600080fd5b938501935b8385101561161957845182529385019390850190611600565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03929092168252602082015260400190565b60006020828403121561166657600080fd5b8151801515811461043557600080fd5b60008219821115611689576116896114cc565b500190565b85815284602082015260a0604082015260006116ad60a0830186611523565b6001600160a01b0394909416606083015250608001529392505050565b6000806000606084860312156116df57600080fd5b8351925060208401519150604084015190509250925092565b80516001600160501b038116811461170f57600080fd5b919050565b600080600080600060a0868803121561172c57600080fd5b611735866116f8565b9450602086015193506040860151925060608601519150611758608087016116f8565b9050929550929590935056fea26469706673582212207efc8d6158743b66205e0905b02824103442a2bd7e86535c39326f4bff8f886e64736f6c634300080f0033";

type MidasGoldOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MidasGoldOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MidasGoldOracle__factory extends ContractFactory {
  constructor(...args: MidasGoldOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MidasGoldOracle> {
    return super.deploy(overrides || {}) as Promise<MidasGoldOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MidasGoldOracle {
    return super.attach(address) as MidasGoldOracle;
  }
  override connect(signer: Signer): MidasGoldOracle__factory {
    return super.connect(signer) as MidasGoldOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MidasGoldOracleInterface {
    return new utils.Interface(_abi) as MidasGoldOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MidasGoldOracle {
    return new Contract(address, _abi, signerOrProvider) as MidasGoldOracle;
  }
}
